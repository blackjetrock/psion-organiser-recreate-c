




















C Based Recreation
------------------


?:   Serial command help
!:   Boot to mass storage
M:   Dump Memory
k:   HID Key
z:   Zero Parameter
y:   Set Parameter to Flash Pak Start
F:   Dump Flash Pak
L:   Dump Language Stack
.:   Write Test Pak Data
t:   Terminal
g:   Graphics Terminal
*:   Format
+:   Catalog
C:   Create File
q:   Query
i:   Interactive Mode
I:   Information
&:   ITF test
D:   Dump Flash pack
%:   Write test records
l:   SD dir listing
r:   Run Test OB3
Enter 0-9,A-F for hex parameter

Interactive mode.

A: RECT:0 RECNO:0 ADD:00000000 LVADP:20081FDC>trans extst_arith.opl
trans extst_arith.opl

Translating extst_arith.opl  uSD card is not mounted  mounting uSD card
mount_volume

fspdrv 0

ok1 

Exiting ok...
  uSD card is mounted
mount_volume

mount_volume

mount_volume

mount_volume

mount_volume

mount_volume

mount_volume

mount_volume

parser_checkNUM_BUFF_ID    :47
parser_checkEXP_BUFF_ID_MAX:46
parser_check
nopl_trans:Pass 1

mount_volume

pull_next_line:FFFFFF0E

pull_next_line:''
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 ''
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 ''
check_literalcheck_literal  ret0 Empty test string
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:0 
pull_next_lineReading line
pull_next_line------------------------------
is_all_spacescline[0] = 'A' (65)
is_all_spacescline[1] = 'R' (82)
is_all_spacescline[2] = 'I' (73)
is_all_spacescline[3] = 'T' (84)
is_all_spacescline[4] = 'H' (72)
is_all_spacescline[5] = '%' (37)
is_all_spacescline[6] = ':' (58)
is_all_spacesIs not all spaces
pull_next_lineGot a line: 'ARITH%:'
pull_next_lineret1
scan_procdef
check_textlabel'ARITH%:'
check_textlabel'ARITH' is a text label chstr:'H'
check_textlabelExit char:%
check_textlabelcheck_textlabel:ret1 Name:'ARITH%' Type:i
scan_procdefText label:'ARITH%'
check_literalcheck_literal:lit=':' idx=6 ':'
check_literalcheck_literal:After drop space:':' idx=6 ':'
check_literalcheck_literal:After while():
check_literalret1 Match. '' == ''
check_literalcheck_literal:lit=' (' idx=7 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'(' idx=7 ''
check_literalcheck_literal  ret0 Empty test string
scan_param_listscan_param_list:ret0
scan_procdefret1 Type:i
pull_next_line:FFFFFF0E

pull_next_line:''
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=7 ''
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=7 ''
check_literalcheck_literal  ret0 Empty test string
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=7 strlen:0 
pull_next_lineReading line
pull_next_line------------------------------
is_all_spacesIs all spaces
pull_next_lineLine was all spaces
pull_next_lineReading line
pull_next_line------------------------------
is_all_spacescline[0] = 'L' (76)
is_all_spacescline[1] = 'O' (79)
is_all_spacescline[2] = 'C' (67)
is_all_spacescline[3] = 'A' (65)
is_all_spacescline[4] = 'L' (76)
is_all_spacescline[5] = ' ' (32)
is_all_spacescline[6] = 'A' (65)
is_all_spacescline[7] = '%' (37)
is_all_spacescline[8] = ',' (44)
is_all_spacescline[9] = ' ' (32)
is_all_spacescline[10] = 'B' (66)
is_all_spacescline[11] = '%' (37)
is_all_spacescline[12] = ',' (44)
is_all_spacescline[13] = ' ' (32)
is_all_spacescline[14] = 'R' (82)
is_all_spacescline[15] = '%' (37)
is_all_spacesIs not all spaces
pull_next_lineGot a line: 'LOCAL A%, B%, R%'
pull_next_lineret1
scan_line:FFFFFF0E

scan_line:'LOCAL A%, B%, R%'cline:'LOCAL A%, B%, R%'
pull_next_line:FFFFFE38

pull_next_line:'LOCAL A%, B%, R%'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'LOCAL A%, B%, R%'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'LOCAL A%, B%, R%'
check_literal  ':' != 'L'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:16 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'L' (76)
is_all_spacescline[1] = 'O' (79)
is_all_spacescline[2] = 'C' (67)
is_all_spacescline[3] = 'A' (65)
is_all_spacescline[4] = 'L' (76)
is_all_spacescline[5] = ' ' (32)
is_all_spacescline[6] = 'A' (65)
is_all_spacescline[7] = '%' (37)
is_all_spacescline[8] = ',' (44)
is_all_spacescline[9] = ' ' (32)
is_all_spacescline[10] = 'B' (66)
is_all_spacescline[11] = '%' (37)
is_all_spacescline[12] = ',' (44)
is_all_spacescline[13] = ' ' (32)
is_all_spacescline[14] = 'R' (82)
is_all_spacescline[15] = '%' (37)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'LOCAL A%, B%, R%'
check_literalcheck_literal:After drop space:'REM' idx=0 'LOCAL A%, B%, R%'
check_literal  'R' != 'L'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'LOCAL A%, B%, R%'
check_literalcheck_literal:After drop space:'REM&' idx=0 'LOCAL A%, B%, R%'
check_literal  'R' != 'L'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'LOCAL A%, B%, R%'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'LOCAL A%, B%, R%'
check_literal  'R' != 'L'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'LOCAL A%, B%, R%'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'LOCAL A%, B%, R%'
check_literal  'R' != 'L'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'LOCAL A%, B%, R%'
check_operator'LOCAL A%, B%, R%' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'LOCAL A%, B%, R%':
check_vnamecheck_vname ret1 ' A%, B%, R%':
check_variableName: ''
check_variablecheck_variable: Ary test ' A%, B%, R%'
check_literalcheck_literal:lit='(' idx=5 ' A%, B%, R%'
check_literalcheck_literal:After drop space:'(' idx=5 ' A%, B%, R%'
check_literal  '(' != ' '
check_literalcheck_literal: ret0
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=5 ' A%, B%, R%'
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=6 'A%, B%, R%'
check_literal  '=' != 'A'
check_literalcheck_literal: ret0
check_assignmentcheck_assignment:ret0
check_declare'LOCAL A%, B%, R%'
check_literalcheck_literal:lit=' LOCAL' idx=0 'LOCAL A%, B%, R%'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'LOCAL A%, B%, R%'
check_literalcheck_literal:After while(): A%, B%, R%
check_literalret1 Match. '' == ''
check_declarecheck_declare:ret 1
scan_declarescan_declare:
check_literalcheck_literal:lit=' LOCAL' idx=0 'LOCAL A%, B%, R%'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'LOCAL A%, B%, R%'
check_literalcheck_literal:After while(): A%, B%, R%
check_literalret1 Match. '' == ''
scan_localglobal'LOCAL A%, B%, R%'
check_literalcheck_literal:lit=' LOCAL' idx=0 'LOCAL A%, B%, R%'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'LOCAL A%, B%, R%'
check_literalcheck_literal:After while(): A%, B%, R%
check_literalret1 Match. '' == ''
check_variable'A%, B%, R%'
check_operator'A%, B%, R%' igncomma:1
check_operatorret0:is comma: 268686678
check_vnamecheck_vname 'A%, B%, R%':
check_vnamecheck_vname ret1 '%, B%, R%':
check_variableName: ''
check_variablecheck_variable: Ary test ', B%, R%'
check_literalcheck_literal:lit='(' idx=8 ', B%, R%'
check_literalcheck_literal:After drop space:'(' idx=8 ', B%, R%'
check_literal  '(' != ','
check_literalcheck_literal: ret0
check_variablecheck_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variablecheck_variable:ret1 
scan_variable' A%, B%, R%' ref_ndeclare:0
scan_vnamescan_vname: ' A%, B%, R%'
scan_vnamescan_vname: ret1 'A'
scan_variablescan_variable: '%, B%, R%' vname='A'
token_is_other_keyword
token_is_other_keyword'A%' is not other keyword
scan_variableArray test ', B%, R%'
check_literalcheck_literal:lit='(' idx=8 ', B%, R%'
check_literalcheck_literal:After drop space:'(' idx=8 ', B%, R%'
check_literal  '(' != ','
check_literalcheck_literal: ret0
scan_variablescan_variable:ret1 vname='A%' Integer
token_is_function
token_is_function:
token_is_function
token_is_function:A% is not function
token_is_function
token_is_function:
token_is_function
token_is_function:A% is not function
add_var_infoName:A% Idx:-1
find_var_info******
find_var_info
Could not find var 'A%'
find_var_info******
add_var_infoNot already present
scan_variableret1
scan_localglobal LOCAL variable:'A%'
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=8 ', B%, R%'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=8 ', B%, R%'
check_literal  ':' != ','
check_literalcheck_literal: ret0
drop_colonExit
check_literalcheck_literal:lit=' ,' idx=8 ', B%, R%'
check_literaldropping space
check_literalcheck_literal:After drop space:',' idx=8 ', B%, R%'
check_literalcheck_literal:After while(): B%, R%
check_literalret1 Match. '' == ''
scan_literal_corescan_literal_core:lit=' ,' ', B%, R%'
scan_literal_corescan_literal_core:After drop space:', B%, R%'
scan_literal_corescan_literal_core:while loop:, B%, R%
token_is_function
token_is_function:
token_is_function
token_is_function:, is not function
token_is_function
token_is_function:
token_is_function
token_is_function:, is not function
scan_literalret1
check_variable'B%, R%'
check_operator'B%, R%' igncomma:1
check_operatorret0:is comma: 268682660
check_vnamecheck_vname 'B%, R%':
check_vnamecheck_vname ret1 '%, R%':
check_variableName: ''
check_variablecheck_variable: Ary test ', R%'
check_literalcheck_literal:lit='(' idx=12 ', R%'
check_literalcheck_literal:After drop space:'(' idx=12 ', R%'
check_literal  '(' != ','
check_literalcheck_literal: ret0
check_variablecheck_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variablecheck_variable:ret1 
scan_variable' B%, R%' ref_ndeclare:0
scan_vnamescan_vname: ' B%, R%'
scan_vnamescan_vname: ret1 'B'
scan_variablescan_variable: '%, R%' vname='B'
token_is_other_keyword
token_is_other_keyword'B%' is not other keyword
scan_variableArray test ', R%'
check_literalcheck_literal:lit='(' idx=12 ', R%'
check_literalcheck_literal:After drop space:'(' idx=12 ', R%'
check_literal  '(' != ','
check_literalcheck_literal: ret0
scan_variablescan_variable:ret1 vname='B%' Integer
token_is_function
token_is_function:
token_is_function
token_is_function:B% is not function
token_is_function
token_is_function:
token_is_function
token_is_function:B% is not function
add_var_infoName:B% Idx:-1
find_var_info******
find_var_info
Could not find var 'B%'
find_var_info******
add_var_infoNot already present
scan_variableret1
scan_localglobal LOCAL variable:'B%'
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=12 ', R%'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=12 ', R%'
check_literal  ':' != ','
check_literalcheck_literal: ret0
drop_colonExit
check_literalcheck_literal:lit=' ,' idx=12 ', R%'
check_literaldropping space
check_literalcheck_literal:After drop space:',' idx=12 ', R%'
check_literalcheck_literal:After while(): R%
check_literalret1 Match. '' == ''
scan_literal_corescan_literal_core:lit=' ,' ', R%'
scan_literal_corescan_literal_core:After drop space:', R%'
scan_literal_corescan_literal_core:while loop:, R%
token_is_function
token_is_function:
token_is_function
token_is_function:, is not function
token_is_function
token_is_function:
token_is_function
token_is_function:, is not function
scan_literalret1
check_variable'R%'
check_operator'R%' igncomma:1
check_operatorret0:is comma: 268682660
check_vnamecheck_vname 'R%':
check_vnamecheck_vname ret1 '%':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=16 ''
check_literalcheck_literal:After drop space:'(' idx=16 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variablecheck_variable:ret1 
scan_variable' R%' ref_ndeclare:0
scan_vnamescan_vname: ' R%'
scan_vnamescan_vname: ret1 'R'
scan_variablescan_variable: '%' vname='R'
token_is_other_keyword
token_is_other_keyword'R%' is not other keyword
scan_variableArray test ''
check_literalcheck_literal:lit='(' idx=16 ''
check_literalcheck_literal:After drop space:'(' idx=16 ''
check_literalcheck_literal  ret0 Empty test string
scan_variablescan_variable:ret1 vname='R%' Integer
token_is_function
token_is_function:
token_is_function
token_is_function:R% is not function
token_is_function
token_is_function:
token_is_function
token_is_function:R% is not function
add_var_infoName:R% Idx:-1
find_var_info******
find_var_info
Could not find var 'R%'
find_var_info******
add_var_infoNot already present
scan_variableret1
scan_localglobal LOCAL variable:'R%'
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=16 ''
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=16 ''
check_literalcheck_literal  ret0 Empty test string
drop_colonExit
check_literalcheck_literal:lit=' ,' idx=16 ''
check_literaldropping space
check_literalcheck_literal:After drop space:',' idx=16 ''
check_literalcheck_literal  ret0 Empty test string
check_variable''
check_operator'' igncomma:1
check_operatorret0:is comma: 268682556
check_vnamecheck_vname '':
check_vnamecheck_vname ret0 '':
check_variablecheck_variable:ret0 
scan_localglobalret1:End of line
scan_declarescan_declare:ret 1
scan_lineret1
check_literalcheck_literal:lit=' :' idx=16 ''
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=16 ''
check_literalcheck_literal  ret0 Empty test string
scan_line:FFFFFF0E

scan_line:''cline:''
pull_next_line:FFFFFE38

pull_next_line:''
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=16 ''
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=16 ''
check_literalcheck_literal  ret0 Empty test string
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=16 strlen:0 
pull_next_lineReading line
pull_next_line------------------------------
is_all_spacesIs all spaces
pull_next_lineLine was all spaces
pull_next_lineReading line
pull_next_line------------------------------
is_all_spacescline[0] = 'A' (65)
is_all_spacescline[1] = '%' (37)
is_all_spacescline[2] = ' ' (32)
is_all_spacescline[3] = '=' (61)
is_all_spacescline[4] = ' ' (32)
is_all_spacescline[5] = '1' (49)
is_all_spacescline[6] = '0' (48)
is_all_spacescline[7] = '0' (48)
is_all_spacesIs not all spaces
pull_next_lineGot a line: 'A% = 100'
pull_next_lineret1
check_literalcheck_literal:lit='REM' idx=0 'A% = 100'
check_literalcheck_literal:After drop space:'REM' idx=0 'A% = 100'
check_literal  'R' != 'A'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'A% = 100'
check_literalcheck_literal:After drop space:'REM&' idx=0 'A% = 100'
check_literal  'R' != 'A'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'A% = 100'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'A% = 100'
check_literal  'R' != 'A'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'A% = 100'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'A% = 100'
check_literal  'R' != 'A'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'A% = 100'
check_operator'A% = 100' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'A% = 100':
check_vnamecheck_vname ret1 '% = 100':
check_variableName: ''
check_variablecheck_variable: Ary test ' = 100'
check_literalcheck_literal:lit='(' idx=2 ' = 100'
check_literalcheck_literal:After drop space:'(' idx=2 ' = 100'
check_literal  '(' != ' '
check_literalcheck_literal: ret0
check_variablecheck_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=2 ' = 100'
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=3 '= 100'
check_literalcheck_literal:After while(): 100
check_literalret1 Match. '' == ''
check_expression' 100'
check_eitemcheck_eitem: '100'
check_function '100'
check_functionret0
check_atomcheck_atom:
check_atomcheck_atom:Checking for character constant
check_literalcheck_literal:lit=' %' idx=5 '100'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=5 '100'
check_literal  '%' != '1'
check_literalcheck_literal: ret0
check_atomcheck_atom:Checking for string
check_literalcheck_literal:lit=' "' idx=5 '100'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=5 '100'
check_literal  '"' != '1'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
check_floatFltval:'100' float:10.000000e+01
check_floatcheck_float: ret0
check_integercheck_integer: '100'
check_integerret1
check_numbercheck_number: ret1
check_atomret1
check_eitemret1
check_operator'' igncomma:0
check_operatorret0:is comma: 0
check_expressionret1 '' commas:0
check_assignmentret1
scan_assignmentscan_assignment:
scan_variable'A% = 100' ref_ndeclare:1
scan_vnamescan_vname: 'A% = 100'
scan_vnamescan_vname: ret1 'A'
scan_variablescan_variable: '% = 100' vname='A'
token_is_other_keyword
token_is_other_keyword'A%' is not other keyword
scan_variableArray test ' = 100'
check_literalcheck_literal:lit='(' idx=2 ' = 100'
check_literalcheck_literal:After drop space:'(' idx=2 ' = 100'
check_literal  '(' != ' '
check_literalcheck_literal: ret0
scan_variablescan_variable:ret1 vname='A%' Integer
token_is_function
token_is_function:
token_is_function
token_is_function:A% is not function
token_is_function
token_is_function:
token_is_function
token_is_function:A% is not function
add_var_infoName:A% Idx:-1
add_var_infoAlready present
add_var_info  reference so OK
scan_variableret1
scan_assignment_equalsscan_assignment_equals:lit=' =' ' = 100'
scan_assignment_equalsscan_assignment_equals:After drop space:'= 100'
scan_assignment_equalsscan_assignment_equals:while loop:= 100
scan_assignment_equalsret1
scan_expression' 100' igncomma:0
check_eitemcheck_eitem: '100'
check_function '100'
check_functionret0
check_atomcheck_atom:
check_atomcheck_atom:Checking for character constant
check_literalcheck_literal:lit=' %' idx=5 '100'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=5 '100'
check_literal  '%' != '1'
check_literalcheck_literal: ret0
check_atomcheck_atom:Checking for string
check_literalcheck_literal:lit=' "' idx=5 '100'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=5 '100'
check_literal  '"' != '1'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
check_floatFltval:'100' float:10.000000e+01
check_floatcheck_float: ret0
check_integercheck_integer: '100'
check_integerret1
check_numbercheck_number: ret1
check_atomret1
check_eitemret1
scan_eitemscan_eitem:
check_function '100'
check_functionret0
check_atomcheck_atom:
check_atomcheck_atom:Checking for character constant
check_literalcheck_literal:lit=' %' idx=5 '100'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=5 '100'
check_literal  '%' != '1'
check_literalcheck_literal: ret0
check_atomcheck_atom:Checking for string
check_literalcheck_literal:lit=' "' idx=5 '100'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=5 '100'
check_literal  '"' != '1'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
check_floatFltval:'100' float:10.000000e+01
check_floatcheck_float: ret0
check_integercheck_integer: '100'
check_integerret1
check_numbercheck_number: ret1
check_atomret1
scan_atomscan_atom:
check_literalcheck_literal:lit=' %' idx=5 '100'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=5 '100'
check_literal  '%' != '1'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' "' idx=5 '100'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=5 '100'
check_literal  '"' != '1'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
check_floatFltval:'100' float:10.000000e+01
check_floatcheck_float: ret0
check_integercheck_integer: '100'
check_integerret1
check_numbercheck_number: ret1
scan_numberscan_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
check_floatFltval:'100' float:10.000000e+01
check_floatcheck_float: ret0
check_integercheck_integer: '100'
check_integerret1
scan_integer'100'
scan_integerret1
scan_integerret1  num_dig:3 intval='100'
scan_atomret1
scan_expression'' Before while igncomma:0
check_operator'' igncomma:0
check_operatorret0:is comma: 16777224
scan_expressionret1 '' commas:0
add_var_infoName:A% Idx:-1
add_var_infoAlready present
add_var_info  reference so OK
scan_assignmentscan_assignment: ret1
scan_lineret1
check_literalcheck_literal:lit=' :' idx=8 ''
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=8 ''
check_literalcheck_literal  ret0 Empty test string
scan_line:FFFFFF0E

scan_line:''cline:''
pull_next_line:FFFFFE38

pull_next_line:''
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=8 ''
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=8 ''
check_literalcheck_literal  ret0 Empty test string
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=8 strlen:0 
pull_next_lineReading line
pull_next_line------------------------------
is_all_spacescline[0] = 'R' (82)
is_all_spacescline[1] = '%' (37)
is_all_spacescline[2] = ' ' (32)
is_all_spacescline[3] = '=' (61)
is_all_spacescline[4] = ' ' (32)
is_all_spacescline[5] = '0' (48)
is_all_spacesIs not all spaces
pull_next_lineGot a line: 'R% = 0'
pull_next_lineret1
check_literalcheck_literal:lit='REM' idx=0 'R% = 0'
check_literalcheck_literal:After drop space:'REM' idx=0 'R% = 0'
check_literal  'E' != '%'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'R% = 0'
check_literalcheck_literal:After drop space:'REM&' idx=0 'R% = 0'
check_literal  'E' != '%'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'R% = 0'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'R% = 0'
check_literal  'E' != '%'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'R% = 0'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'R% = 0'
check_literal  'E' != '%'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'R% = 0'
check_operator'R% = 0' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'R% = 0':
check_vnamecheck_vname ret1 '% = 0':
check_variableName: ''
check_variablecheck_variable: Ary test ' = 0'
check_literalcheck_literal:lit='(' idx=2 ' = 0'
check_literalcheck_literal:After drop space:'(' idx=2 ' = 0'
check_literal  '(' != ' '
check_literalcheck_literal: ret0
check_variablecheck_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=2 ' = 0'
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=3 '= 0'
check_literalcheck_literal:After while(): 0
check_literalret1 Match. '' == ''
check_expression' 0'
check_eitemcheck_eitem: '0'
check_function '0'
check_functionret0
check_atomcheck_atom:
check_atomcheck_atom:Checking for character constant
check_literalcheck_literal:lit=' %' idx=5 '0'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=5 '0'
check_literal  '%' != '0'
check_literalcheck_literal: ret0
check_atomcheck_atom:Checking for string
check_literalcheck_literal:lit=' "' idx=5 '0'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=5 '0'
check_literal  '"' != '0'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
check_floatFltval:'0' float:0.000000e+00
check_floatcheck_float: ret0
check_integercheck_integer: '0'
check_integerret1
check_numbercheck_number: ret1
check_atomret1
check_eitemret1
check_operator'' igncomma:0
check_operatorret0:is comma: 0
check_expressionret1 '' commas:0
check_assignmentret1
scan_assignmentscan_assignment:
scan_variable'R% = 0' ref_ndeclare:1
scan_vnamescan_vname: 'R% = 0'
scan_vnamescan_vname: ret1 'R'
scan_variablescan_variable: '% = 0' vname='R'
token_is_other_keyword
token_is_other_keyword'R%' is not other keyword
scan_variableArray test ' = 0'
check_literalcheck_literal:lit='(' idx=2 ' = 0'
check_literalcheck_literal:After drop space:'(' idx=2 ' = 0'
check_literal  '(' != ' '
check_literalcheck_literal: ret0
scan_variablescan_variable:ret1 vname='R%' Integer
token_is_function
token_is_function:
token_is_function
token_is_function:R% is not function
token_is_function
token_is_function:
token_is_function
token_is_function:R% is not function
add_var_infoName:R% Idx:-1
add_var_infoAlready present
add_var_info  reference so OK
scan_variableret1
scan_assignment_equalsscan_assignment_equals:lit=' =' ' = 0'
scan_assignment_equalsscan_assignment_equals:After drop space:'= 0'
scan_assignment_equalsscan_assignment_equals:while loop:= 0
scan_assignment_equalsret1
scan_expression' 0' igncomma:0
check_eitemcheck_eitem: '0'
check_function '0'
check_functionret0
check_atomcheck_atom:
check_atomcheck_atom:Checking for character constant
check_literalcheck_literal:lit=' %' idx=5 '0'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=5 '0'
check_literal  '%' != '0'
check_literalcheck_literal: ret0
check_atomcheck_atom:Checking for string
check_literalcheck_literal:lit=' "' idx=5 '0'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=5 '0'
check_literal  '"' != '0'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
check_floatFltval:'0' float:0.000000e+00
check_floatcheck_float: ret0
check_integercheck_integer: '0'
check_integerret1
check_numbercheck_number: ret1
check_atomret1
check_eitemret1
scan_eitemscan_eitem:
check_function '0'
check_functionret0
check_atomcheck_atom:
check_atomcheck_atom:Checking for character constant
check_literalcheck_literal:lit=' %' idx=5 '0'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=5 '0'
check_literal  '%' != '0'
check_literalcheck_literal: ret0
check_atomcheck_atom:Checking for string
check_literalcheck_literal:lit=' "' idx=5 '0'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=5 '0'
check_literal  '"' != '0'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
check_floatFltval:'0' float:0.000000e+00
check_floatcheck_float: ret0
check_integercheck_integer: '0'
check_integerret1
check_numbercheck_number: ret1
check_atomret1
scan_atomscan_atom:
check_literalcheck_literal:lit=' %' idx=5 '0'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=5 '0'
check_literal  '%' != '0'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' "' idx=5 '0'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=5 '0'
check_literal  '"' != '0'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
check_floatFltval:'0' float:0.000000e+00
check_floatcheck_float: ret0
check_integercheck_integer: '0'
check_integerret1
check_numbercheck_number: ret1
scan_numberscan_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
check_floatFltval:'0' float:0.000000e+00
check_floatcheck_float: ret0
check_integercheck_integer: '0'
check_integerret1
scan_integer'0'
scan_integerret1
scan_integerret1  num_dig:1 intval='0'
scan_atomret1
scan_expression'' Before while igncomma:0
check_operator'' igncomma:0
check_operatorret0:is comma: 16777222
scan_expressionret1 '' commas:0
add_var_infoName:R% Idx:-1
add_var_infoAlready present
add_var_info  reference so OK
scan_assignmentscan_assignment: ret1
scan_lineret1
check_literalcheck_literal:lit=' :' idx=6 ''
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=6 ''
check_literalcheck_literal  ret0 Empty test string
scan_line:FFFFFF0E

scan_line:''cline:''
pull_next_line:FFFFFE38

pull_next_line:''
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=6 ''
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=6 ''
check_literalcheck_literal  ret0 Empty test string
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=6 strlen:0 
pull_next_lineReading line
pull_next_line------------------------------
is_all_spacesIs all spaces
pull_next_lineLine was all spaces
pull_next_lineReading line
pull_next_line------------------------------
is_all_spacescline[0] = 'p' (112)
is_all_spacescline[1] = 'r' (114)
is_all_spacescline[2] = 'i' (105)
is_all_spacescline[3] = 'n' (110)
is_all_spacescline[4] = 't' (116)
is_all_spacescline[5] = ' ' (32)
is_all_spacescline[6] = 'A' (65)
is_all_spacescline[7] = '%' (37)
is_all_spacesIs not all spaces
pull_next_lineGot a line: 'print A%'
pull_next_lineret1
check_literalcheck_literal:lit='REM' idx=0 'print A%'
check_literalcheck_literal:After drop space:'REM' idx=0 'print A%'
check_literal  'R' != 'p'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'print A%'
check_literalcheck_literal:After drop space:'REM&' idx=0 'print A%'
check_literal  'R' != 'p'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'print A%'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'print A%'
check_literal  'R' != 'p'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'print A%'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'print A%'
check_literal  'R' != 'p'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'print A%'
check_operator'print A%' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'print A%':
check_vnamecheck_vname ret1 ' A%':
check_variableName: ''
check_variablecheck_variable: Ary test ' A%'
check_literalcheck_literal:lit='(' idx=5 ' A%'
check_literalcheck_literal:After drop space:'(' idx=5 ' A%'
check_literal  '(' != ' '
check_literalcheck_literal: ret0
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=5 ' A%'
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=6 'A%'
check_literal  '=' != 'A'
check_literalcheck_literal: ret0
check_assignmentcheck_assignment:ret0
check_declare'print A%'
check_literalcheck_literal:lit=' LOCAL' idx=0 'print A%'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'print A%'
check_literal  'L' != 'p'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'print A%'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'print A%'
check_literal  'G' != 'p'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'print A%'
check_textlabel'print' is a text label chstr:'t'
check_textlabelExit char: 
check_textlabelcheck_textlabel:ret1 Name:'print' Type:f
check_literalcheck_literal:lit='::' idx=5 ' A%'
check_literalcheck_literal:After drop space:'::' idx=5 ' A%'
check_literal  ':' != ' '
check_literalcheck_literal: ret0
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'print A%'
check_textlabel'print' is a text label chstr:'t'
check_textlabelExit char: 
check_textlabelcheck_textlabel:ret1 Name:'print' Type:f
check_proc_call'print' is text label
check_literalcheck_literal:lit=':' idx=5 ' A%'
check_literalcheck_literal:After drop space:':' idx=5 ' A%'
check_literal  ':' != ' '
check_literalcheck_literal: ret0
check_proc_callcheck_proc_call:ret0
check_input'print A%'
check_literalcheck_literal:lit=' INPUT' idx=0 'print A%'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'print A%'
check_literal  'I' != 'p'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'print A%'
check_literalcheck_literal:lit=' PRINT' idx=0 'print A%'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'print A%'
check_literalcheck_literal:After while(): A%
check_literalret1 Match. '' == ''
check_printret1
scan_printprint type:0
check_literalcheck_literal:lit=' PRINT' idx=0 'print A%'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'print A%'
check_literalcheck_literal:After while(): A%
check_literalret1 Match. '' == ''
check_expression' A%'
check_eitemcheck_eitem: 'A%'
check_function 'A%'
check_functionret0
check_atomcheck_atom:
check_atomcheck_atom:Checking for character constant
check_literalcheck_literal:lit=' %' idx=6 'A%'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=6 'A%'
check_literal  '%' != 'A'
check_literalcheck_literal: ret0
check_atomcheck_atom:Checking for string
check_literalcheck_literal:lit=' "' idx=6 'A%'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=6 'A%'
check_literal  '"' != 'A'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
check_floatFltval:'' float:0.000000e+00
check_floatcheck_float: ret0
check_integercheck_integer: 'A%'
check_integercheck_integer:ret0
check_hexcheck_hex: 'A%'
check_hexcheck_hex:ret0 not '$'
check_numbercheck_number: ret0
check_proc_callcheck_proc_call:
check_textlabel'A%'
check_textlabel'A' is a text label chstr:'A'
check_textlabelExit char:%
check_textlabelcheck_textlabel:ret1 Name:'A%' Type:i
check_proc_call'A%' is text label
check_literalcheck_literal:lit=':' idx=8 ''
check_literalcheck_literal:After drop space:':' idx=8 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_variable'A%'
check_operator'A%' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'A%':
check_vnamecheck_vname ret1 '%':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=8 ''
check_literalcheck_literal:After drop space:'(' idx=8 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variablecheck_variable:ret1 
check_atomret1
check_eitemret1
check_operator'' igncomma:1
check_operatorret0:is comma: 0
check_expressionret1 '' commas:0
check_literalcheck_literal:lit=' PRINT' idx=0 'print A%'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'print A%'
check_literalcheck_literal:After while(): A%
check_literalret1 Match. '' == ''
scan_printBefore while
check_expression' A%'
check_eitemcheck_eitem: 'A%'
check_function 'A%'
check_functionret0
check_atomcheck_atom:
check_atomcheck_atom:Checking for character constant
check_literalcheck_literal:lit=' %' idx=6 'A%'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=6 'A%'
check_literal  '%' != 'A'
check_literalcheck_literal: ret0
check_atomcheck_atom:Checking for string
check_literalcheck_literal:lit=' "' idx=6 'A%'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=6 'A%'
check_literal  '"' != 'A'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
check_floatFltval:'' float:0.000000e+00
check_floatcheck_float: ret0
check_integercheck_integer: 'A%'
check_integercheck_integer:ret0
check_hexcheck_hex: 'A%'
check_hexcheck_hex:ret0 not '$'
check_numbercheck_number: ret0
check_proc_callcheck_proc_call:
check_textlabel'A%'
check_textlabel'A' is a text label chstr:'A'
check_textlabelExit char:%
check_textlabelcheck_textlabel:ret1 Name:'A%' Type:i
check_proc_call'A%' is text label
check_literalcheck_literal:lit=':' idx=8 ''
check_literalcheck_literal:After drop space:':' idx=8 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_variable'A%'
check_operator'A%' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'A%':
check_vnamecheck_vname ret1 '%':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=8 ''
check_literalcheck_literal:After drop space:'(' idx=8 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variablecheck_variable:ret1 
check_atomret1
check_eitemret1
check_operator'' igncomma:1
check_operatorret0:is comma: 0
check_expressionret1 '' commas:0
scan_printCheck expression ok, in while loop
scan_printScan expression
scan_expression' A%' igncomma:1
check_eitemcheck_eitem: 'A%'
check_function 'A%'
check_functionret0
check_atomcheck_atom:
check_atomcheck_atom:Checking for character constant
check_literalcheck_literal:lit=' %' idx=6 'A%'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=6 'A%'
check_literal  '%' != 'A'
check_literalcheck_literal: ret0
check_atomcheck_atom:Checking for string
check_literalcheck_literal:lit=' "' idx=6 'A%'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=6 'A%'
check_literal  '"' != 'A'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
check_floatFltval:'' float:0.000000e+00
check_floatcheck_float: ret0
check_integercheck_integer: 'A%'
check_integercheck_integer:ret0
check_hexcheck_hex: 'A%'
check_hexcheck_hex:ret0 not '$'
check_numbercheck_number: ret0
check_proc_callcheck_proc_call:
check_textlabel'A%'
check_textlabel'A' is a text label chstr:'A'
check_textlabelExit char:%
check_textlabelcheck_textlabel:ret1 Name:'A%' Type:i
check_proc_call'A%' is text label
check_literalcheck_literal:lit=':' idx=8 ''
check_literalcheck_literal:After drop space:':' idx=8 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_variable'A%'
check_operator'A%' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'A%':
check_vnamecheck_vname ret1 '%':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=8 ''
check_literalcheck_literal:After drop space:'(' idx=8 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variablecheck_variable:ret1 
check_atomret1
check_eitemret1
scan_eitemscan_eitem:
check_function 'A%'
check_functionret0
check_atomcheck_atom:
check_atomcheck_atom:Checking for character constant
check_literalcheck_literal:lit=' %' idx=6 'A%'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=6 'A%'
check_literal  '%' != 'A'
check_literalcheck_literal: ret0
check_atomcheck_atom:Checking for string
check_literalcheck_literal:lit=' "' idx=6 'A%'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=6 'A%'
check_literal  '"' != 'A'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
check_floatFltval:'' float:0.000000e+00
check_floatcheck_float: ret0
check_integercheck_integer: 'A%'
check_integercheck_integer:ret0
check_hexcheck_hex: 'A%'
check_hexcheck_hex:ret0 not '$'
check_numbercheck_number: ret0
check_proc_callcheck_proc_call:
check_textlabel'A%'
check_textlabel'A' is a text label chstr:'A'
check_textlabelExit char:%
check_textlabelcheck_textlabel:ret1 Name:'A%' Type:i
check_proc_call'A%' is text label
check_literalcheck_literal:lit=':' idx=8 ''
check_literalcheck_literal:After drop space:':' idx=8 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_variable'A%'
check_operator'A%' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'A%':
check_vnamecheck_vname ret1 '%':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=8 ''
check_literalcheck_literal:After drop space:'(' idx=8 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variablecheck_variable:ret1 
check_atomret1
scan_atomscan_atom:
check_literalcheck_literal:lit=' %' idx=6 'A%'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=6 'A%'
check_literal  '%' != 'A'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' "' idx=6 'A%'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=6 'A%'
check_literal  '"' != 'A'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
check_floatFltval:'' float:0.000000e+00
check_floatcheck_float: ret0
check_integercheck_integer: 'A%'
check_integercheck_integer:ret0
check_hexcheck_hex: 'A%'
check_hexcheck_hex:ret0 not '$'
check_numbercheck_number: ret0
check_proc_callcheck_proc_call:
check_textlabel'A%'
check_textlabel'A' is a text label chstr:'A'
check_textlabelExit char:%
check_textlabelcheck_textlabel:ret1 Name:'A%' Type:i
check_proc_call'A%' is text label
check_literalcheck_literal:lit=':' idx=8 ''
check_literalcheck_literal:After drop space:':' idx=8 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_variable'A%'
check_operator'A%' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'A%':
check_vnamecheck_vname ret1 '%':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=8 ''
check_literalcheck_literal:After drop space:'(' idx=8 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variablecheck_variable:ret1 
scan_variable'A%' ref_ndeclare:1
scan_vnamescan_vname: 'A%'
scan_vnamescan_vname: ret1 'A'
scan_variablescan_variable: '%' vname='A'
token_is_other_keyword
token_is_other_keyword'A%' is not other keyword
scan_variableArray test ''
check_literalcheck_literal:lit='(' idx=8 ''
check_literalcheck_literal:After drop space:'(' idx=8 ''
check_literalcheck_literal  ret0 Empty test string
scan_variablescan_variable:ret1 vname='A%' Integer
token_is_function
token_is_function:
token_is_function
token_is_function:A% is not function
token_is_function
token_is_function:
token_is_function
token_is_function:A% is not function
add_var_infoName:A% Idx:-1
add_var_infoAlready present
add_var_info  reference so OK
scan_variableret1
scan_atomret1
scan_expression'' Before while igncomma:1
check_operator'' igncomma:1
check_operatorret0:is comma: 268560071
scan_expressionret1 '' commas:0
scan_printAfter scan expression I
check_literalcheck_literal:lit=' ,' idx=8 ''
check_literaldropping space
check_literalcheck_literal:After drop space:',' idx=8 ''
check_literalcheck_literal  ret0 Empty test string
scan_printAfter scan expression II
check_literalcheck_literal:lit=' ;' idx=8 ''
check_literaldropping space
check_literalcheck_literal:After drop space:';' idx=8 ''
check_literalcheck_literal  ret0 Empty test string
scan_printChecking if delimiter was present
scan_printNo delimiter present
check_expression''
check_eitemcheck_eitem: ''
check_function ''
check_functionret0
check_atomcheck_atom:
check_atomcheck_atom:Checking for character constant
check_literalcheck_literal:lit=' %' idx=8 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=8 ''
check_literalcheck_literal  ret0 Empty test string
check_atomcheck_atom:Checking for string
check_literalcheck_literal:lit=' "' idx=8 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=8 ''
check_literalcheck_literal  ret0 Empty test string
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
check_floatFltval:'' float:0.000000e+00
check_floatcheck_float: ret0
check_integercheck_integer: ''
check_integercheck_integer:ret0
check_hexcheck_hex: ''
check_hexcheck_hex:ret0 not '$'
check_numbercheck_number: ret0
check_proc_callcheck_proc_call:
check_textlabel''
check_textlabel'' is a text label chstr:'L'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'' Type:f
check_proc_call'' is text label
check_literalcheck_literal:lit=':' idx=8 ''
check_literalcheck_literal:After drop space:':' idx=8 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_variable''
check_operator'' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname '':
check_vnamecheck_vname ret0 '':
check_variablecheck_variable:ret0 
check_atomcheck_atom:ret0
check_sub_exprcheck_sub_expr:
check_literalcheck_literal:lit=' (' idx=8 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'(' idx=8 ''
check_literalcheck_literal  ret0 Empty test string
check_sub_exprret0: No '('
check_addr_namecheck_addr_name: ''
check_vnamecheck_vname '':
check_vnamecheck_vname ret0 '':
check_addr_namecheck_addr_name: ret0
check_eitemcheck_eitem:ret0
check_operator'' igncomma:1
check_operatorret0:is comma: 0
check_expressionret0 ''
scan_printCheck for trailing delimiter
check_literalcheck_literal:lit=' ;' idx=8 ''
check_literaldropping space
check_literalcheck_literal:After drop space:';' idx=8 ''
check_literalcheck_literal  ret0 Empty test string
check_literalcheck_literal:lit=' ,' idx=8 ''
check_literaldropping space
check_literalcheck_literal:After drop space:',' idx=8 ''
check_literalcheck_literal  ret0 Empty test string
scan_printscan_print:ret1 Expression 
scan_lineret1 print
check_literalcheck_literal:lit=' :' idx=8 ''
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=8 ''
check_literalcheck_literal  ret0 Empty test string
scan_line:FFFFFF0E

scan_line:''cline:''
pull_next_line:FFFFFE38

pull_next_line:''
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=8 ''
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=8 ''
check_literalcheck_literal  ret0 Empty test string
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=8 strlen:0 
pull_next_lineReading line
pull_next_line------------------------------
is_all_spacescline[0] = 'A' (65)
is_all_spacescline[1] = '%' (37)
is_all_spacescline[2] = ' ' (32)
is_all_spacescline[3] = '=' (61)
is_all_spacescline[4] = ' ' (32)
is_all_spacescline[5] = 'A' (65)
is_all_spacescline[6] = '%' (37)
is_all_spacescline[7] = ' ' (32)
is_all_spacescline[8] = '/' (47)
is_all_spacescline[9] = ' ' (32)
is_all_spacescline[10] = '2' (50)
is_all_spacesIs not all spaces
pull_next_lineGot a line: 'A% = A% / 2'
pull_next_lineret1
check_literalcheck_literal:lit='REM' idx=0 'A% = A% / 2'
check_literalcheck_literal:After drop space:'REM' idx=0 'A% = A% / 2'
check_literal  'R' != 'A'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'A% = A% / 2'
check_literalcheck_literal:After drop space:'REM&' idx=0 'A% = A% / 2'
check_literal  'R' != 'A'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'A% = A% / 2'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'A% = A% / 2'
check_literal  'R' != 'A'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'A% = A% / 2'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'A% = A% / 2'
check_literal  'R' != 'A'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'A% = A% / 2'
check_operator'A% = A% / 2' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'A% = A% / 2':
check_vnamecheck_vname ret1 '% = A% / 2':
check_variableName: ''
check_variablecheck_variable: Ary test ' = A% / 2'
check_literalcheck_literal:lit='(' idx=2 ' = A% / 2'
check_literalcheck_literal:After drop space:'(' idx=2 ' = A% / 2'
check_literal  '(' != ' '
check_literalcheck_literal: ret0
check_variablecheck_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=2 ' = A% / 2'
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=3 '= A% / 2'
check_literalcheck_literal:After while(): A% / 2
check_literalret1 Match. '' == ''
check_expression' A% / 2'
check_eitemcheck_eitem: 'A% / 2'
check_function 'A% / 2'
check_functionret0
check_atomcheck_atom:
check_atomcheck_atom:Checking for character constant
check_literalcheck_literal:lit=' %' idx=5 'A% / 2'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=5 'A% / 2'
check_literal  '%' != 'A'
check_literalcheck_literal: ret0
check_atomcheck_atom:Checking for string
check_literalcheck_literal:lit=' "' idx=5 'A% / 2'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=5 'A% / 2'
check_literal  '"' != 'A'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
check_floatFltval:'' float:0.000000e+00
check_floatcheck_float: ret0
check_integercheck_integer: 'A% / 2'
check_integercheck_integer:ret0
check_hexcheck_hex: 'A% / 2'
check_hexcheck_hex:ret0 not '$'
check_numbercheck_number: ret0
check_proc_callcheck_proc_call:
check_textlabel'A% / 2'
check_textlabel'A' is a text label chstr:'A'
check_textlabelExit char:%
check_textlabelcheck_textlabel:ret1 Name:'A%' Type:i
check_proc_call'A%' is text label
check_literalcheck_literal:lit=':' idx=7 ' / 2'
check_literalcheck_literal:After drop space:':' idx=7 ' / 2'
check_literal  ':' != ' '
check_literalcheck_literal: ret0
check_proc_callcheck_proc_call:ret0
check_variable'A% / 2'
check_operator'A% / 2' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'A% / 2':
check_vnamecheck_vname ret1 '% / 2':
check_variableName: ''
check_variablecheck_variable: Ary test ' / 2'
check_literalcheck_literal:lit='(' idx=7 ' / 2'
check_literalcheck_literal:After drop space:'(' idx=7 ' / 2'
check_literal  '(' != ' '
check_literalcheck_literal: ret0
check_variablecheck_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variablecheck_variable:ret1 
check_atomret1
check_eitemret1
check_operator'/ 2' igncomma:0
check_operatorret1:is comma: 0
check_operator'2' igncomma:0
check_operatorret0:is comma: 0
check_eitemcheck_eitem: '2'
check_function '2'
check_functionret0
check_atomcheck_atom:
check_atomcheck_atom:Checking for character constant
check_literalcheck_literal:lit=' %' idx=10 '2'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=10 '2'
check_literal  '%' != '2'
check_literalcheck_literal: ret0
check_atomcheck_atom:Checking for string
check_literalcheck_literal:lit=' "' idx=10 '2'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=10 '2'
check_literal  '"' != '2'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
check_floatFltval:'2' float:2.000000e+00
check_floatcheck_float: ret0
check_integercheck_integer: '2'
check_integerret1
check_numbercheck_number: ret1
check_atomret1
check_eitemret1
check_expressionn commas now:0
check_literalcheck_literal:lit=' %' idx=11 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=11 ''
check_literalcheck_literal  ret0 Empty test string
check_operator'' igncomma:0
check_operatorret0:is comma: 0
check_expressionret1 '' commas:0
check_assignmentret1
scan_assignmentscan_assignment:
scan_variable'A% = A% / 2' ref_ndeclare:1
scan_vnamescan_vname: 'A% = A% / 2'
scan_vnamescan_vname: ret1 'A'
scan_variablescan_variable: '% = A% / 2' vname='A'
token_is_other_keyword
token_is_other_keyword'A%' is not other keyword
scan_variableArray test ' = A% / 2'
check_literalcheck_literal:lit='(' idx=2 ' = A% / 2'
check_literalcheck_literal:After drop space:'(' idx=2 ' = A% / 2'
check_literal  '(' != ' '
check_literalcheck_literal: ret0
scan_variablescan_variable:ret1 vname='A%' Integer
token_is_function
token_is_function:
token_is_function
token_is_function:A% is not function
token_is_function
token_is_function:
token_is_function
token_is_function:A% is not function
add_var_infoName:A% Idx:-1
add_var_infoAlready present
add_var_info  reference so OK
scan_variableret1
scan_assignment_equalsscan_assignment_equals:lit=' =' ' = A% / 2'
scan_assignment_equalsscan_assignment_equals:After drop space:'= A% / 2'
scan_assignment_equalsscan_assignment_equals:while loop:= A% / 2
scan_assignment_equalsret1
scan_expression' A% / 2' igncomma:0
check_eitemcheck_eitem: 'A% / 2'
check_function 'A% / 2'
check_functionret0
check_atomcheck_atom:
check_atomcheck_atom:Checking for character constant
check_literalcheck_literal:lit=' %' idx=5 'A% / 2'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=5 'A% / 2'
check_literal  '%' != 'A'
check_literalcheck_literal: ret0
check_atomcheck_atom:Checking for string
check_literalcheck_literal:lit=' "' idx=5 'A% / 2'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=5 'A% / 2'
check_literal  '"' != 'A'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
check_floatFltval:'' float:0.000000e+00
check_floatcheck_float: ret0
check_integercheck_integer: 'A% / 2'
check_integercheck_integer:ret0
check_hexcheck_hex: 'A% / 2'
check_hexcheck_hex:ret0 not '$'
check_numbercheck_number: ret0
check_proc_callcheck_proc_call:
check_textlabel'A% / 2'
check_textlabel'A' is a text label chstr:'A'
check_textlabelExit char:%
check_textlabelcheck_textlabel:ret1 Name:'A%' Type:i
check_proc_call'A%' is text label
check_literalcheck_literal:lit=':' idx=7 ' / 2'
check_literalcheck_literal:After drop space:':' idx=7 ' / 2'
check_literal  ':' != ' '
check_literalcheck_literal: ret0
check_proc_callcheck_proc_call:ret0
check_variable'A% / 2'
check_operator'A% / 2' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'A% / 2':
check_vnamecheck_vname ret1 '% / 2':
check_variableName: ''
check_variablecheck_variable: Ary test ' / 2'
check_literalcheck_literal:lit='(' idx=7 ' / 2'
check_literalcheck_literal:After drop space:'(' idx=7 ' / 2'
check_literal  '(' != ' '
check_literalcheck_literal: ret0
check_variablecheck_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variablecheck_variable:ret1 
check_atomret1
check_eitemret1
scan_eitemscan_eitem:
check_function 'A% / 2'
check_functionret0
check_atomcheck_atom:
check_atomcheck_atom:Checking for character constant
check_literalcheck_literal:lit=' %' idx=5 'A% / 2'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=5 'A% / 2'
check_literal  '%' != 'A'
check_literalcheck_literal: ret0
check_atomcheck_atom:Checking for string
check_literalcheck_literal:lit=' "' idx=5 'A% / 2'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=5 'A% / 2'
check_literal  '"' != 'A'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
check_floatFltval:'' float:0.000000e+00
check_floatcheck_float: ret0
check_integercheck_integer: 'A% / 2'
check_integercheck_integer:ret0
check_hexcheck_hex: 'A% / 2'
check_hexcheck_hex:ret0 not '$'
check_numbercheck_number: ret0
check_proc_callcheck_proc_call:
check_textlabel'A% / 2'
check_textlabel'A' is a text label chstr:'A'
check_textlabelExit char:%
check_textlabelcheck_textlabel:ret1 Name:'A%' Type:i
check_proc_call'A%' is text label
check_literalcheck_literal:lit=':' idx=7 ' / 2'
check_literalcheck_literal:After drop space:':' idx=7 ' / 2'
check_literal  ':' != ' '
check_literalcheck_literal: ret0
check_proc_callcheck_proc_call:ret0
check_variable'A% / 2'
check_operator'A% / 2' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'A% / 2':
check_vnamecheck_vname ret1 '% / 2':
check_variableName: ''
check_variablecheck_variable: Ary test ' / 2'
check_literalcheck_literal:lit='(' idx=7 ' / 2'
check_literalcheck_literal:After drop space:'(' idx=7 ' / 2'
check_literal  '(' != ' '
check_literalcheck_literal: ret0
check_variablecheck_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variablecheck_variable:ret1 
check_atomret1
scan_atomscan_atom:
check_literalcheck_literal:lit=' %' idx=5 'A% / 2'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=5 'A% / 2'
check_literal  '%' != 'A'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' "' idx=5 'A% / 2'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=5 'A% / 2'
check_literal  '"' != 'A'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
check_floatFltval:'' float:0.000000e+00
check_floatcheck_float: ret0
check_integercheck_integer: 'A% / 2'
check_integercheck_integer:ret0
check_hexcheck_hex: 'A% / 2'
check_hexcheck_hex:ret0 not '$'
check_numbercheck_number: ret0
check_proc_callcheck_proc_call:
check_textlabel'A% / 2'
check_textlabel'A' is a text label chstr:'A'
check_textlabelExit char:%
check_textlabelcheck_textlabel:ret1 Name:'A%' Type:i
check_proc_call'A%' is text label
check_literalcheck_literal:lit=':' idx=7 ' / 2'
check_literalcheck_literal:After drop space:':' idx=7 ' / 2'
check_literal  ':' != ' '
check_literalcheck_literal: ret0
check_proc_callcheck_proc_call:ret0
check_variable'A% / 2'
check_operator'A% / 2' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'A% / 2':
check_vnamecheck_vname ret1 '% / 2':
check_variableName: ''
check_variablecheck_variable: Ary test ' / 2'
check_literalcheck_literal:lit='(' idx=7 ' / 2'
check_literalcheck_literal:After drop space:'(' idx=7 ' / 2'
check_literal  '(' != ' '
check_literalcheck_literal: ret0
check_variablecheck_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variablecheck_variable:ret1 
scan_variable'A% / 2' ref_ndeclare:1
scan_vnamescan_vname: 'A% / 2'
scan_vnamescan_vname: ret1 'A'
scan_variablescan_variable: '% / 2' vname='A'
token_is_other_keyword
token_is_other_keyword'A%' is not other keyword
scan_variableArray test ' / 2'
check_literalcheck_literal:lit='(' idx=7 ' / 2'
check_literalcheck_literal:After drop space:'(' idx=7 ' / 2'
check_literal  '(' != ' '
check_literalcheck_literal: ret0
scan_variablescan_variable:ret1 vname='A%' Integer
token_is_function
token_is_function:
token_is_function
token_is_function:A% is not function
token_is_function
token_is_function:
token_is_function
token_is_function:A% is not function
add_var_infoName:A% Idx:-1
add_var_infoAlready present
add_var_info  reference so OK
scan_variableret1
scan_atomret1
scan_expression' / 2' Before while igncomma:0
check_operator'/ 2' igncomma:0
check_operatorret1:is comma: 0
check_operator'/ 2' igncomma:0
check_operatorret1:is comma: 0
scan_operatorscan_operator: ' / 2'
check_literalcheck_literal:lit=' ,' idx=8 '/ 2'
check_literaldropping space
check_literalcheck_literal:After drop space:',' idx=8 '/ 2'
check_literal  ',' != '/'
check_literalcheck_literal: ret0
scan_operatorscan_operator: ret1 ' 2' nb:0
check_operator'2' igncomma:0
check_operatorret0:is comma: 0
scan_expression'2' Before scan_eitem igncomma:0
scan_eitemscan_eitem:
check_function '2'
check_functionret0
check_atomcheck_atom:
check_atomcheck_atom:Checking for character constant
check_literalcheck_literal:lit=' %' idx=9 ' 2'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=10 '2'
check_literal  '%' != '2'
check_literalcheck_literal: ret0
check_atomcheck_atom:Checking for string
check_literalcheck_literal:lit=' "' idx=9 ' 2'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=10 '2'
check_literal  '"' != '2'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
check_floatFltval:'2' float:2.000000e+00
check_floatcheck_float: ret0
check_integercheck_integer: '2'
check_integerret1
check_numbercheck_number: ret1
check_atomret1
scan_atomscan_atom:
check_literalcheck_literal:lit=' %' idx=9 ' 2'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=10 '2'
check_literal  '%' != '2'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' "' idx=9 ' 2'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=10 '2'
check_literal  '"' != '2'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
check_floatFltval:'2' float:2.000000e+00
check_floatcheck_float: ret0
check_integercheck_integer: '2'
check_integerret1
check_numbercheck_number: ret1
scan_numberscan_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
check_floatFltval:'2' float:2.000000e+00
check_floatcheck_float: ret0
check_integercheck_integer: '2'
check_integerret1
scan_integer'2'
scan_integerret1
scan_integerret1  num_dig:1 intval='2'
scan_atomret1
scan_expressionn commas now:0
check_literalcheck_literal:lit=' %' idx=11 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=11 ''
check_literalcheck_literal  ret0 Empty test string
check_operator'' igncomma:0
check_operatorret0:is comma: 0
scan_expressionret1 '' commas:0
add_var_infoName:A% Idx:-1
add_var_infoAlready present
add_var_info  reference so OK
scan_assignmentscan_assignment: ret1
scan_lineret1
check_literalcheck_literal:lit=' :' idx=11 ''
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=11 ''
check_literalcheck_literal  ret0 Empty test string
scan_line:FFFFFF0E

scan_line:''cline:''
pull_next_line:FFFFFE38

pull_next_line:''
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=11 ''
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=11 ''
check_literalcheck_literal  ret0 Empty test string
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=11 strlen:0 
pull_next_lineReading line
pull_next_line------------------------------
is_all_spacesIs all spaces
pull_next_lineLine was all spaces
pull_next_lineReading line
pull_next_line------------------------------
is_all_spacescline[0] = 'p' (112)
is_all_spacescline[1] = 'r' (114)
is_all_spacescline[2] = 'i' (105)
is_all_spacescline[3] = 'n' (110)
is_all_spacescline[4] = 't' (116)
is_all_spacescline[5] = ' ' (32)
is_all_spacescline[6] = '"' (34)
is_all_spacescline[7] = 'A' (65)
is_all_spacescline[8] = ':' (58)
is_all_spacescline[9] = '"' (34)
is_all_spacescline[10] = ';' (59)
is_all_spacescline[11] = 'A' (65)
is_all_spacescline[12] = '%' (37)
is_all_spacesIs not all spaces
pull_next_lineGot a line: 'print "A:";A%'
pull_next_lineret1
check_literalcheck_literal:lit='REM' idx=0 'print "A:";A%'
check_literalcheck_literal:After drop space:'REM' idx=0 'print "A:";A%'
check_literal  'R' != 'p'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'print "A:";A%'
check_literalcheck_literal:After drop space:'REM&' idx=0 'print "A:";A%'
check_literal  'R' != 'p'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'print "A:";A%'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'print "A:";A%'
check_literal  'R' != 'p'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'print "A:";A%'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'print "A:";A%'
check_literal  'R' != 'p'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'print "A:";A%'
check_operator'print "A:";A%' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'print "A:";A%':
check_vnamecheck_vname ret1 ' "A:";A%':
check_variableName: ''
check_variablecheck_variable: Ary test ' "A:";A%'
check_literalcheck_literal:lit='(' idx=5 ' "A:";A%'
check_literalcheck_literal:After drop space:'(' idx=5 ' "A:";A%'
check_literal  '(' != ' '
check_literalcheck_literal: ret0
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=5 ' "A:";A%'
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=6 '"A:";A%'
check_literal  '=' != '"'
check_literalcheck_literal: ret0
check_assignmentcheck_assignment:ret0
check_declare'print "A:";A%'
check_literalcheck_literal:lit=' LOCAL' idx=0 'print "A:";A%'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'print "A:";A%'
check_literal  'L' != 'p'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'print "A:";A%'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'print "A:";A%'
check_literal  'G' != 'p'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'print "A:";A%'
check_textlabel'print' is a text label chstr:'t'
check_textlabelExit char: 
check_textlabelcheck_textlabel:ret1 Name:'print' Type:f
check_literalcheck_literal:lit='::' idx=5 ' "A:";A%'
check_literalcheck_literal:After drop space:'::' idx=5 ' "A:";A%'
check_literal  ':' != ' '
check_literalcheck_literal: ret0
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'print "A:";A%'
check_textlabel'print' is a text label chstr:'t'
check_textlabelExit char: 
check_textlabelcheck_textlabel:ret1 Name:'print' Type:f
check_proc_call'print' is text label
check_literalcheck_literal:lit=':' idx=5 ' "A:";A%'
check_literalcheck_literal:After drop space:':' idx=5 ' "A:";A%'
check_literal  ':' != ' '
check_literalcheck_literal: ret0
check_proc_callcheck_proc_call:ret0
check_input'print "A:";A%'
check_literalcheck_literal:lit=' INPUT' idx=0 'print "A:";A%'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'print "A:";A%'
check_literal  'I' != 'p'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'print "A:";A%'
check_literalcheck_literal:lit=' PRINT' idx=0 'print "A:";A%'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'print "A:";A%'
check_literalcheck_literal:After while(): "A:";A%
check_literalret1 Match. '' == ''
check_printret1
scan_printprint type:0
check_literalcheck_literal:lit=' PRINT' idx=0 'print "A:";A%'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'print "A:";A%'
check_literalcheck_literal:After while(): "A:";A%
check_literalret1 Match. '' == ''
check_expression' "A:";A%'
check_eitemcheck_eitem: '"A:";A%'
check_function '"A:";A%'
check_functionret0
check_atomcheck_atom:
check_atomcheck_atom:Checking for character constant
check_literalcheck_literal:lit=' %' idx=6 '"A:";A%'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=6 '"A:";A%'
check_literal  '%' != '"'
check_literalcheck_literal: ret0
check_atomcheck_atom:Checking for string
check_literalcheck_literal:lit=' "' idx=6 '"A:";A%'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=6 '"A:";A%'
check_literalcheck_literal:After while():A:";A%
check_literalret1 Match. '' == ''
check_atomret1
check_eitemret1
check_operator';A%' igncomma:1
check_operatorret0:is comma: 0
check_expressionret1 ';A%' commas:0
check_literalcheck_literal:lit=' PRINT' idx=0 'print "A:";A%'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'print "A:";A%'
check_literalcheck_literal:After while(): "A:";A%
check_literalret1 Match. '' == ''
scan_printBefore while
check_expression' "A:";A%'
check_eitemcheck_eitem: '"A:";A%'
check_function '"A:";A%'
check_functionret0
check_atomcheck_atom:
check_atomcheck_atom:Checking for character constant
check_literalcheck_literal:lit=' %' idx=6 '"A:";A%'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=6 '"A:";A%'
check_literal  '%' != '"'
check_literalcheck_literal: ret0
check_atomcheck_atom:Checking for string
check_literalcheck_literal:lit=' "' idx=6 '"A:";A%'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=6 '"A:";A%'
check_literalcheck_literal:After while():A:";A%
check_literalret1 Match. '' == ''
check_atomret1
check_eitemret1
check_operator';A%' igncomma:1
check_operatorret0:is comma: 0
check_expressionret1 ';A%' commas:0
scan_printCheck expression ok, in while loop
scan_printScan expression
scan_expression' "A:";A%' igncomma:1
check_eitemcheck_eitem: '"A:";A%'
check_function '"A:";A%'
check_functionret0
check_atomcheck_atom:
check_atomcheck_atom:Checking for character constant
check_literalcheck_literal:lit=' %' idx=6 '"A:";A%'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=6 '"A:";A%'
check_literal  '%' != '"'
check_literalcheck_literal: ret0
check_atomcheck_atom:Checking for string
check_literalcheck_literal:lit=' "' idx=6 '"A:";A%'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=6 '"A:";A%'
check_literalcheck_literal:After while():A:";A%
check_literalret1 Match. '' == ''
check_atomret1
check_eitemret1
scan_eitemscan_eitem:
check_function '"A:";A%'
check_functionret0
check_atomcheck_atom:
check_atomcheck_atom:Checking for character constant
check_literalcheck_literal:lit=' %' idx=6 '"A:";A%'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=6 '"A:";A%'
check_literal  '%' != '"'
check_literalcheck_literal: ret0
check_atomcheck_atom:Checking for string
check_literalcheck_literal:lit=' "' idx=6 '"A:";A%'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=6 '"A:";A%'
check_literalcheck_literal:After while():A:";A%
check_literalret1 Match. '' == ''
check_atomret1
scan_atomscan_atom:
check_literalcheck_literal:lit=' %' idx=6 '"A:";A%'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=6 '"A:";A%'
check_literal  '%' != '"'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' "' idx=6 '"A:";A%'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=6 '"A:";A%'
check_literalcheck_literal:After while():A:";A%
check_literalret1 Match. '' == ''
scan_stringscan_string:
check_literalcheck_literal:lit=' "' idx=6 '"A:";A%'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=6 '"A:";A%'
check_literalcheck_literal:After while():A:";A%
check_literalret1 Match. '' == ''
scan_string  (in if) 'A:";A%'
scan_string  (in wh) 'A:";A%'
scan_string  (in wh) ':";A%'
scan_string  (in wh) ':";A%'
scan_string  (in wh) '";A%'
scan_stringscan_string: ret1
token_is_function
token_is_function:
token_is_function
token_is_function:"A:" is not function
token_is_function
token_is_function:
token_is_function
token_is_function:"A:" is not function
scan_atomret1
scan_expression';A%' Before while igncomma:1
check_operator';A%' igncomma:1
check_operatorret0:is comma: 268560071
scan_expressionret1 ';A%' commas:0
scan_printAfter scan expression I
check_literalcheck_literal:lit=' ,' idx=10 ';A%'
check_literaldropping space
check_literalcheck_literal:After drop space:',' idx=10 ';A%'
check_literal  ',' != ';'
check_literalcheck_literal: ret0
scan_printAfter scan expression II
check_literalcheck_literal:lit=' ;' idx=10 ';A%'
check_literaldropping space
check_literalcheck_literal:After drop space:';' idx=10 ';A%'
check_literalcheck_literal:After while():A%
check_literalret1 Match. '' == ''
scan_literal_corescan_literal_core:lit=' ;' ';A%'
scan_literal_corescan_literal_core:After drop space:';A%'
scan_literal_corescan_literal_core:while loop:;A%
token_is_function
token_is_function:
token_is_function
token_is_function:; is not function
token_is_function
token_is_function:
token_is_function
token_is_function:; is not function
scan_literalret1
scan_printChecking if delimiter was present
scan_printDelimiter present
scan_printSemi colon present
check_expression'A%'
check_eitemcheck_eitem: 'A%'
check_function 'A%'
check_functionret0
check_atomcheck_atom:
check_atomcheck_atom:Checking for character constant
check_literalcheck_literal:lit=' %' idx=11 'A%'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=11 'A%'
check_literal  '%' != 'A'
check_literalcheck_literal: ret0
check_atomcheck_atom:Checking for string
check_literalcheck_literal:lit=' "' idx=11 'A%'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=11 'A%'
check_literal  '"' != 'A'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
check_floatFltval:'' float:0.000000e+00
check_floatcheck_float: ret0
check_integercheck_integer: 'A%'
check_integercheck_integer:ret0
check_hexcheck_hex: 'A%'
check_hexcheck_hex:ret0 not '$'
check_numbercheck_number: ret0
check_proc_callcheck_proc_call:
check_textlabel'A%'
check_textlabel'A' is a text label chstr:'A'
check_textlabelExit char:%
check_textlabelcheck_textlabel:ret1 Name:'A%' Type:i
check_proc_call'A%' is text label
check_literalcheck_literal:lit=':' idx=13 ''
check_literalcheck_literal:After drop space:':' idx=13 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_variable'A%'
check_operator'A%' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'A%':
check_vnamecheck_vname ret1 '%':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=13 ''
check_literalcheck_literal:After drop space:'(' idx=13 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variablecheck_variable:ret1 
check_atomret1
check_eitemret1
check_operator'' igncomma:1
check_operatorret0:is comma: 0
check_expressionret1 '' commas:0
scan_printCheck expression ok, in while loop
scan_printScan expression
scan_expression'A%' igncomma:1
check_eitemcheck_eitem: 'A%'
check_function 'A%'
check_functionret0
check_atomcheck_atom:
check_atomcheck_atom:Checking for character constant
check_literalcheck_literal:lit=' %' idx=11 'A%'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=11 'A%'
check_literal  '%' != 'A'
check_literalcheck_literal: ret0
check_atomcheck_atom:Checking for string
check_literalcheck_literal:lit=' "' idx=11 'A%'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=11 'A%'
check_literal  '"' != 'A'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
check_floatFltval:'' float:0.000000e+00
check_floatcheck_float: ret0
check_integercheck_integer: 'A%'
check_integercheck_integer:ret0
check_hexcheck_hex: 'A%'
check_hexcheck_hex:ret0 not '$'
check_numbercheck_number: ret0
check_proc_callcheck_proc_call:
check_textlabel'A%'
check_textlabel'A' is a text label chstr:'A'
check_textlabelExit char:%
check_textlabelcheck_textlabel:ret1 Name:'A%' Type:i
check_proc_call'A%' is text label
check_literalcheck_literal:lit=':' idx=13 ''
check_literalcheck_literal:After drop space:':' idx=13 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_variable'A%'
check_operator'A%' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'A%':
check_vnamecheck_vname ret1 '%':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=13 ''
check_literalcheck_literal:After drop space:'(' idx=13 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variablecheck_variable:ret1 
check_atomret1
check_eitemret1
scan_eitemscan_eitem:
check_function 'A%'
check_functionret0
check_atomcheck_atom:
check_atomcheck_atom:Checking for character constant
check_literalcheck_literal:lit=' %' idx=11 'A%'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=11 'A%'
check_literal  '%' != 'A'
check_literalcheck_literal: ret0
check_atomcheck_atom:Checking for string
check_literalcheck_literal:lit=' "' idx=11 'A%'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=11 'A%'
check_literal  '"' != 'A'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
check_floatFltval:'' float:0.000000e+00
check_floatcheck_float: ret0
check_integercheck_integer: 'A%'
check_integercheck_integer:ret0
check_hexcheck_hex: 'A%'
check_hexcheck_hex:ret0 not '$'
check_numbercheck_number: ret0
check_proc_callcheck_proc_call:
check_textlabel'A%'
check_textlabel'A' is a text label chstr:'A'
check_textlabelExit char:%
check_textlabelcheck_textlabel:ret1 Name:'A%' Type:i
check_proc_call'A%' is text label
check_literalcheck_literal:lit=':' idx=13 ''
check_literalcheck_literal:After drop space:':' idx=13 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_variable'A%'
check_operator'A%' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'A%':
check_vnamecheck_vname ret1 '%':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=13 ''
check_literalcheck_literal:After drop space:'(' idx=13 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variablecheck_variable:ret1 
check_atomret1
scan_atomscan_atom:
check_literalcheck_literal:lit=' %' idx=11 'A%'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=11 'A%'
check_literal  '%' != 'A'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' "' idx=11 'A%'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=11 'A%'
check_literal  '"' != 'A'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
check_floatFltval:'' float:0.000000e+00
check_floatcheck_float: ret0
check_integercheck_integer: 'A%'
check_integercheck_integer:ret0
check_hexcheck_hex: 'A%'
check_hexcheck_hex:ret0 not '$'
check_numbercheck_number: ret0
check_proc_callcheck_proc_call:
check_textlabel'A%'
check_textlabel'A' is a text label chstr:'A'
check_textlabelExit char:%
check_textlabelcheck_textlabel:ret1 Name:'A%' Type:i
check_proc_call'A%' is text label
check_literalcheck_literal:lit=':' idx=13 ''
check_literalcheck_literal:After drop space:':' idx=13 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_variable'A%'
check_operator'A%' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'A%':
check_vnamecheck_vname ret1 '%':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=13 ''
check_literalcheck_literal:After drop space:'(' idx=13 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variablecheck_variable:ret1 
scan_variable'A%' ref_ndeclare:1
scan_vnamescan_vname: 'A%'
scan_vnamescan_vname: ret1 'A'
scan_variablescan_variable: '%' vname='A'
token_is_other_keyword
token_is_other_keyword'A%' is not other keyword
scan_variableArray test ''
check_literalcheck_literal:lit='(' idx=13 ''
check_literalcheck_literal:After drop space:'(' idx=13 ''
check_literalcheck_literal  ret0 Empty test string
scan_variablescan_variable:ret1 vname='A%' Integer
token_is_function
token_is_function:
token_is_function
token_is_function:A% is not function
token_is_function
token_is_function:
token_is_function
token_is_function:A% is not function
add_var_infoName:A% Idx:-1
add_var_infoAlready present
add_var_info  reference so OK
scan_variableret1
scan_atomret1
scan_expression'' Before while igncomma:1
check_operator'' igncomma:1
check_operatorret0:is comma: 268560071
scan_expressionret1 '' commas:0
scan_printAfter scan expression I
check_literalcheck_literal:lit=' ,' idx=13 ''
check_literaldropping space
check_literalcheck_literal:After drop space:',' idx=13 ''
check_literalcheck_literal  ret0 Empty test string
scan_printAfter scan expression II
check_literalcheck_literal:lit=' ;' idx=13 ''
check_literaldropping space
check_literalcheck_literal:After drop space:';' idx=13 ''
check_literalcheck_literal  ret0 Empty test string
scan_printChecking if delimiter was present
scan_printNo delimiter present
check_expression''
check_eitemcheck_eitem: ''
check_function ''
check_functionret0
check_atomcheck_atom:
check_atomcheck_atom:Checking for character constant
check_literalcheck_literal:lit=' %' idx=13 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=13 ''
check_literalcheck_literal  ret0 Empty test string
check_atomcheck_atom:Checking for string
check_literalcheck_literal:lit=' "' idx=13 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=13 ''
check_literalcheck_literal  ret0 Empty test string
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
check_floatFltval:'' float:0.000000e+00
check_floatcheck_float: ret0
check_integercheck_integer: ''
check_integercheck_integer:ret0
check_hexcheck_hex: ''
check_hexcheck_hex:ret0 not '$'
check_numbercheck_number: ret0
check_proc_callcheck_proc_call:
check_textlabel''
check_textlabel'' is a text label chstr:'L'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'' Type:f
check_proc_call'' is text label
check_literalcheck_literal:lit=':' idx=13 ''
check_literalcheck_literal:After drop space:':' idx=13 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_variable''
check_operator'' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname '':
check_vnamecheck_vname ret0 '':
check_variablecheck_variable:ret0 
check_atomcheck_atom:ret0
check_sub_exprcheck_sub_expr:
check_literalcheck_literal:lit=' (' idx=13 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'(' idx=13 ''
check_literalcheck_literal  ret0 Empty test string
check_sub_exprret0: No '('
check_addr_namecheck_addr_name: ''
check_vnamecheck_vname '':
check_vnamecheck_vname ret0 '':
check_addr_namecheck_addr_name: ret0
check_eitemcheck_eitem:ret0
check_operator'' igncomma:1
check_operatorret0:is comma: 0
check_expressionret0 ''
scan_printCheck for trailing delimiter
check_literalcheck_literal:lit=' ;' idx=13 ''
check_literaldropping space
check_literalcheck_literal:After drop space:';' idx=13 ''
check_literalcheck_literal  ret0 Empty test string
check_literalcheck_literal:lit=' ,' idx=13 ''
check_literaldropping space
check_literalcheck_literal:After drop space:',' idx=13 ''
check_literalcheck_literal  ret0 Empty test string
scan_printscan_print:ret1 Expression 
scan_lineret1 print
check_literalcheck_literal:lit=' :' idx=13 ''
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=13 ''
check_literalcheck_literal  ret0 Empty test string
scan_line:FFFFFF0E

scan_line:''cline:''
pull_next_line:FFFFFE38

pull_next_line:''
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=13 ''
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=13 ''
check_literalcheck_literal  ret0 Empty test string
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=13 strlen:0 
pull_next_lineReading line
pull_next_line------------------------------
is_all_spacescline[0] = 'A' (65)
is_all_spacescline[1] = '%' (37)
is_all_spacescline[2] = ' ' (32)
is_all_spacescline[3] = '=' (61)
is_all_spacescline[4] = ' ' (32)
is_all_spacescline[5] = 'A' (65)
is_all_spacescline[6] = '%' (37)
is_all_spacescline[7] = ' ' (32)
is_all_spacescline[8] = '*' (42)
is_all_spacescline[9] = ' ' (32)
is_all_spacescline[10] = '3' (51)
is_all_spacesIs not all spaces
pull_next_lineGot a line: 'A% = A% * 3'
pull_next_lineret1
check_literalcheck_literal:lit='REM' idx=0 'A% = A% * 3'
check_literalcheck_literal:After drop space:'REM' idx=0 'A% = A% * 3'
check_literal  'R' != 'A'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'A% = A% * 3'
check_literalcheck_literal:After drop space:'REM&' idx=0 'A% = A% * 3'
check_literal  'R' != 'A'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'A% = A% * 3'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'A% = A% * 3'
check_literal  'R' != 'A'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'A% = A% * 3'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'A% = A% * 3'
check_literal  'R' != 'A'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'A% = A% * 3'
check_operator'A% = A% * 3' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'A% = A% * 3':
check_vnamecheck_vname ret1 '% = A% * 3':
check_variableName: ''
check_variablecheck_variable: Ary test ' = A% * 3'
check_literalcheck_literal:lit='(' idx=2 ' = A% * 3'
check_literalcheck_literal:After drop space:'(' idx=2 ' = A% * 3'
check_literal  '(' != ' '
check_literalcheck_literal: ret0
check_variablecheck_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=2 ' = A% * 3'
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=3 '= A% * 3'
check_literalcheck_literal:After while(): A% * 3
check_literalret1 Match. '' == ''
check_expression' A% * 3'
check_eitemcheck_eitem: 'A% * 3'
check_function 'A% * 3'
check_functionret0
check_atomcheck_atom:
check_atomcheck_atom:Checking for character constant
check_literalcheck_literal:lit=' %' idx=5 'A% * 3'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=5 'A% * 3'
check_literal  '%' != 'A'
check_literalcheck_literal: ret0
check_atomcheck_atom:Checking for string
check_literalcheck_literal:lit=' "' idx=5 'A% * 3'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=5 'A% * 3'
check_literal  '"' != 'A'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
check_floatFltval:'' float:0.000000e+00
check_floatcheck_float: ret0
check_integercheck_integer: 'A% * 3'
check_integercheck_integer:ret0
check_hexcheck_hex: 'A% * 3'
check_hexcheck_hex:ret0 not '$'
check_numbercheck_number: ret0
check_proc_callcheck_proc_call:
check_textlabel'A% * 3'
check_textlabel'A' is a text label chstr:'A'
check_textlabelExit char:%
check_textlabelcheck_textlabel:ret1 Name:'A%' Type:i
check_proc_call'A%' is text label
check_literalcheck_literal:lit=':' idx=7 ' * 3'
check_literalcheck_literal:After drop space:':' idx=7 ' * 3'
check_literal  ':' != ' '
check_literalcheck_literal: ret0
check_proc_callcheck_proc_call:ret0
check_variable'A% * 3'
check_operator'A% * 3' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'A% * 3':
check_vnamecheck_vname ret1 '% * 3':
check_variableName: ''
check_variablecheck_variable: Ary test ' * 3'
check_literalcheck_literal:lit='(' idx=7 ' * 3'
check_literalcheck_literal:After drop space:'(' idx=7 ' * 3'
check_literal  '(' != ' '
check_literalcheck_literal: ret0
check_variablecheck_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variablecheck_variable:ret1 
check_atomret1
check_eitemret1
check_operator'* 3' igncomma:0
check_operatorret1:is comma: 0
check_operator'3' igncomma:0
check_operatorret0:is comma: 0
check_eitemcheck_eitem: '3'
check_function '3'
check_functionret0
check_atomcheck_atom:
check_atomcheck_atom:Checking for character constant
check_literalcheck_literal:lit=' %' idx=10 '3'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=10 '3'
check_literal  '%' != '3'
check_literalcheck_literal: ret0
check_atomcheck_atom:Checking for string
check_literalcheck_literal:lit=' "' idx=10 '3'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=10 '3'
check_literal  '"' != '3'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
check_floatFltval:'3' float:3.000000e+00
check_floatcheck_float: ret0
check_integercheck_integer: '3'
check_integerret1
check_numbercheck_number: ret1
check_atomret1
check_eitemret1
check_expressionn commas now:0
check_literalcheck_literal:lit=' %' idx=11 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=11 ''
check_literalcheck_literal  ret0 Empty test string
check_operator'' igncomma:0
check_operatorret0:is comma: 0
check_expressionret1 '' commas:0
check_assignmentret1
scan_assignmentscan_assignment:
scan_variable'A% = A% * 3' ref_ndeclare:1
scan_vnamescan_vname: 'A% = A% * 3'
scan_vnamescan_vname: ret1 'A'
scan_variablescan_variable: '% = A% * 3' vname='A'
token_is_other_keyword
token_is_other_keyword'A%' is not other keyword
scan_variableArray test ' = A% * 3'
check_literalcheck_literal:lit='(' idx=2 ' = A% * 3'
check_literalcheck_literal:After drop space:'(' idx=2 ' = A% * 3'
check_literal  '(' != ' '
check_literalcheck_literal: ret0
scan_variablescan_variable:ret1 vname='A%' Integer
token_is_function
token_is_function:
token_is_function
token_is_function:A% is not function
token_is_function
token_is_function:
token_is_function
token_is_function:A% is not function
add_var_infoName:A% Idx:-1
add_var_infoAlready present
add_var_info  reference so OK
scan_variableret1
scan_assignment_equalsscan_assignment_equals:lit=' =' ' = A% * 3'
scan_assignment_equalsscan_assignment_equals:After drop space:'= A% * 3'
scan_assignment_equalsscan_assignment_equals:while loop:= A% * 3
scan_assignment_equalsret1
scan_expression' A% * 3' igncomma:0
check_eitemcheck_eitem: 'A% * 3'
check_function 'A% * 3'
check_functionret0
check_atomcheck_atom:
check_atomcheck_atom:Checking for character constant
check_literalcheck_literal:lit=' %' idx=5 'A% * 3'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=5 'A% * 3'
check_literal  '%' != 'A'
check_literalcheck_literal: ret0
check_atomcheck_atom:Checking for string
check_literalcheck_literal:lit=' "' idx=5 'A% * 3'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=5 'A% * 3'
check_literal  '"' != 'A'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
check_floatFltval:'' float:0.000000e+00
check_floatcheck_float: ret0
check_integercheck_integer: 'A% * 3'
check_integercheck_integer:ret0
check_hexcheck_hex: 'A% * 3'
check_hexcheck_hex:ret0 not '$'
check_numbercheck_number: ret0
check_proc_callcheck_proc_call:
check_textlabel'A% * 3'
check_textlabel'A' is a text label chstr:'A'
check_textlabelExit char:%
check_textlabelcheck_textlabel:ret1 Name:'A%' Type:i
check_proc_call'A%' is text label
check_literalcheck_literal:lit=':' idx=7 ' * 3'
check_literalcheck_literal:After drop space:':' idx=7 ' * 3'
check_literal  ':' != ' '
check_literalcheck_literal: ret0
check_proc_callcheck_proc_call:ret0
check_variable'A% * 3'
check_operator'A% * 3' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'A% * 3':
check_vnamecheck_vname ret1 '% * 3':
check_variableName: ''
check_variablecheck_variable: Ary test ' * 3'
check_literalcheck_literal:lit='(' idx=7 ' * 3'
check_literalcheck_literal:After drop space:'(' idx=7 ' * 3'
check_literal  '(' != ' '
check_literalcheck_literal: ret0
check_variablecheck_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variablecheck_variable:ret1 
check_atomret1
check_eitemret1
scan_eitemscan_eitem:
check_function 'A% * 3'
check_functionret0
check_atomcheck_atom:
check_atomcheck_atom:Checking for character constant
check_literalcheck_literal:lit=' %' idx=5 'A% * 3'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=5 'A% * 3'
check_literal  '%' != 'A'
check_literalcheck_literal: ret0
check_atomcheck_atom:Checking for string
check_literalcheck_literal:lit=' "' idx=5 'A% * 3'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=5 'A% * 3'
check_literal  '"' != 'A'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
check_floatFltval:'' float:0.000000e+00
check_floatcheck_float: ret0
check_integercheck_integer: 'A% * 3'
check_integercheck_integer:ret0
check_hexcheck_hex: 'A% * 3'
check_hexcheck_hex:ret0 not '$'
check_numbercheck_number: ret0
check_proc_callcheck_proc_call:
check_textlabel'A% * 3'
check_textlabel'A' is a text label chstr:'A'
check_textlabelExit char:%
check_textlabelcheck_textlabel:ret1 Name:'A%' Type:i
check_proc_call'A%' is text label
check_literalcheck_literal:lit=':' idx=7 ' * 3'
check_literalcheck_literal:After drop space:':' idx=7 ' * 3'
check_literal  ':' != ' '
check_literalcheck_literal: ret0
check_proc_callcheck_proc_call:ret0
check_variable'A% * 3'
check_operator'A% * 3' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'A% * 3':
check_vnamecheck_vname ret1 '% * 3':
check_variableName: ''
check_variablecheck_variable: Ary test ' * 3'
check_literalcheck_literal:lit='(' idx=7 ' * 3'
check_literalcheck_literal:After drop space:'(' idx=7 ' * 3'
check_literal  '(' != ' '
check_literalcheck_literal: ret0
check_variablecheck_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variablecheck_variable:ret1 
check_atomret1
scan_atomscan_atom:
check_literalcheck_literal:lit=' %' idx=5 'A% * 3'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=5 'A% * 3'
check_literal  '%' != 'A'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' "' idx=5 'A% * 3'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=5 'A% * 3'
check_literal  '"' != 'A'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
check_floatFltval:'' float:0.000000e+00
check_floatcheck_float: ret0
check_integercheck_integer: 'A% * 3'
check_integercheck_integer:ret0
check_hexcheck_hex: 'A% * 3'
check_hexcheck_hex:ret0 not '$'
check_numbercheck_number: ret0
check_proc_callcheck_proc_call:
check_textlabel'A% * 3'
check_textlabel'A' is a text label chstr:'A'
check_textlabelExit char:%
check_textlabelcheck_textlabel:ret1 Name:'A%' Type:i
check_proc_call'A%' is text label
check_literalcheck_literal:lit=':' idx=7 ' * 3'
check_literalcheck_literal:After drop space:':' idx=7 ' * 3'
check_literal  ':' != ' '
check_literalcheck_literal: ret0
check_proc_callcheck_proc_call:ret0
check_variable'A% * 3'
check_operator'A% * 3' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'A% * 3':
check_vnamecheck_vname ret1 '% * 3':
check_variableName: ''
check_variablecheck_variable: Ary test ' * 3'
check_literalcheck_literal:lit='(' idx=7 ' * 3'
check_literalcheck_literal:After drop space:'(' idx=7 ' * 3'
check_literal  '(' != ' '
check_literalcheck_literal: ret0
check_variablecheck_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variablecheck_variable:ret1 
scan_variable'A% * 3' ref_ndeclare:1
scan_vnamescan_vname: 'A% * 3'
scan_vnamescan_vname: ret1 'A'
scan_variablescan_variable: '% * 3' vname='A'
token_is_other_keyword
token_is_other_keyword'A%' is not other keyword
scan_variableArray test ' * 3'
check_literalcheck_literal:lit='(' idx=7 ' * 3'
check_literalcheck_literal:After drop space:'(' idx=7 ' * 3'
check_literal  '(' != ' '
check_literalcheck_literal: ret0
scan_variablescan_variable:ret1 vname='A%' Integer
token_is_function
token_is_function:
token_is_function
token_is_function:A% is not function
token_is_function
token_is_function:
token_is_function
token_is_function:A% is not function
add_var_infoName:A% Idx:-1
add_var_infoAlready present
add_var_info  reference so OK
scan_variableret1
scan_atomret1
scan_expression' * 3' Before while igncomma:0
check_operator'* 3' igncomma:0
check_operatorret1:is comma: 0
check_operator'* 3' igncomma:0
check_operatorret1:is comma: 0
scan_operatorscan_operator: ' * 3'
check_literalcheck_literal:lit=' ,' idx=8 '* 3'
check_literaldropping space
check_literalcheck_literal:After drop space:',' idx=8 '* 3'
check_literal  ',' != '*'
check_literalcheck_literal: ret0
scan_operatorscan_operator: ret1 ' 3' nb:0
check_operator'3' igncomma:0
check_operatorret0:is comma: 0
scan_expression'3' Before scan_eitem igncomma:0
scan_eitemscan_eitem:
check_function '3'
check_functionret0
check_atomcheck_atom:
check_atomcheck_atom:Checking for character constant
check_literalcheck_literal:lit=' %' idx=9 ' 3'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=10 '3'
check_literal  '%' != '3'
check_literalcheck_literal: ret0
check_atomcheck_atom:Checking for string
check_literalcheck_literal:lit=' "' idx=9 ' 3'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=10 '3'
check_literal  '"' != '3'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
check_floatFltval:'3' float:3.000000e+00
check_floatcheck_float: ret0
check_integercheck_integer: '3'
check_integerret1
check_numbercheck_number: ret1
check_atomret1
scan_atomscan_atom:
check_literalcheck_literal:lit=' %' idx=9 ' 3'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=10 '3'
check_literal  '%' != '3'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' "' idx=9 ' 3'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=10 '3'
check_literal  '"' != '3'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
check_floatFltval:'3' float:3.000000e+00
check_floatcheck_float: ret0
check_integercheck_integer: '3'
check_integerret1
check_numbercheck_number: ret1
scan_numberscan_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
check_floatFltval:'3' float:3.000000e+00
check_floatcheck_float: ret0
check_integercheck_integer: '3'
check_integerret1
scan_integer'3'
scan_integerret1
scan_integerret1  num_dig:1 intval='3'
scan_atomret1
scan_expressionn commas now:0
check_literalcheck_literal:lit=' %' idx=11 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=11 ''
check_literalcheck_literal  ret0 Empty test string
check_operator'' igncomma:0
check_operatorret0:is comma: 0
scan_expressionret1 '' commas:0
add_var_infoName:A% Idx:-1
add_var_infoAlready present
add_var_info  reference so OK
scan_assignmentscan_assignment: ret1
scan_lineret1
check_literalcheck_literal:lit=' :' idx=11 ''
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=11 ''
check_literalcheck_literal  ret0 Empty test string
scan_line:FFFFFF0E

scan_line:''cline:''
pull_next_line:FFFFFE38

pull_next_line:''
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=11 ''
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=11 ''
check_literalcheck_literal  ret0 Empty test string
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=11 strlen:0 
pull_next_lineReading line
pull_next_line------------------------------
is_all_spacesIs all spaces
pull_next_lineLine was all spaces
pull_next_lineReading line
pull_next_line------------------------------
is_all_spacescline[0] = 'A' (65)
is_all_spacescline[1] = '%' (37)
is_all_spacescline[2] = ' ' (32)
is_all_spacescline[3] = '=' (61)
is_all_spacescline[4] = ' ' (32)
is_all_spacescline[5] = 'A' (65)
is_all_spacescline[6] = '%' (37)
is_all_spacescline[7] = ' ' (32)
is_all_spacescline[8] = '+' (43)
is_all_spacescline[9] = ' ' (32)
is_all_spacescline[10] = '1' (49)
is_all_spacescline[11] = '0' (48)
is_all_spacescline[12] = '0' (48)
is_all_spacescline[13] = '0' (48)
is_all_spacesIs not all spaces
pull_next_lineGot a line: 'A% = A% + 1000'
pull_next_lineret1
check_literalcheck_literal:lit='REM' idx=0 'A% = A% + 1000'
check_literalcheck_literal:After drop space:'REM' idx=0 'A% = A% + 1000'
check_literal  'R' != 'A'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'A% = A% + 1000'
check_literalcheck_literal:After drop space:'REM&' idx=0 'A% = A% + 1000'
check_literal  'R' != 'A'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'A% = A% + 1000'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'A% = A% + 1000'
check_literal  'R' != 'A'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'A% = A% + 1000'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'A% = A% + 1000'
check_literal  'R' != 'A'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'A% = A% + 1000'
check_operator'A% = A% + 1000' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'A% = A% + 1000':
check_vnamecheck_vname ret1 '% = A% + 1000':
check_variableName: ''
check_variablecheck_variable: Ary test ' = A% + 1000'
check_literalcheck_literal:lit='(' idx=2 ' = A% + 1000'
check_literalcheck_literal:After drop space:'(' idx=2 ' = A% + 1000'
check_literal  '(' != ' '
check_literalcheck_literal: ret0
check_variablecheck_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=2 ' = A% + 1000'
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=3 '= A% + 1000'
check_literalcheck_literal:After while(): A% + 1000
check_literalret1 Match. '' == ''
check_expression' A% + 1000'
check_eitemcheck_eitem: 'A% + 1000'
check_function 'A% + 1000'
check_functionret0
check_atomcheck_atom:
check_atomcheck_atom:Checking for character constant
check_literalcheck_literal:lit=' %' idx=5 'A% + 1000'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=5 'A% + 1000'
check_literal  '%' != 'A'
check_literalcheck_literal: ret0
check_atomcheck_atom:Checking for string
check_literalcheck_literal:lit=' "' idx=5 'A% + 1000'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=5 'A% + 1000'
check_literal  '"' != 'A'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
check_floatFltval:'' float:0.000000e+00
check_floatcheck_float: ret0
check_integercheck_integer: 'A% + 1000'
check_integercheck_integer:ret0
check_hexcheck_hex: 'A% + 1000'
check_hexcheck_hex:ret0 not '$'
check_numbercheck_number: ret0
check_proc_callcheck_proc_call:
check_textlabel'A% + 1000'
check_textlabel'A' is a text label chstr:'A'
check_textlabelExit char:%
check_textlabelcheck_textlabel:ret1 Name:'A%' Type:i
check_proc_call'A%' is text label
check_literalcheck_literal:lit=':' idx=7 ' + 1000'
check_literalcheck_literal:After drop space:':' idx=7 ' + 1000'
check_literal  ':' != ' '
check_literalcheck_literal: ret0
check_proc_callcheck_proc_call:ret0
check_variable'A% + 1000'
check_operator'A% + 1000' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'A% + 1000':
check_vnamecheck_vname ret1 '% + 1000':
check_variableName: ''
check_variablecheck_variable: Ary test ' + 1000'
check_literalcheck_literal:lit='(' idx=7 ' + 1000'
check_literalcheck_literal:After drop space:'(' idx=7 ' + 1000'
check_literal  '(' != ' '
check_literalcheck_literal: ret0
check_variablecheck_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variablecheck_variable:ret1 
check_atomret1
check_eitemret1
check_operator'+ 1000' igncomma:0
check_operatorret1:is comma: 0
check_operator'1000' igncomma:0
check_operatorret0:is comma: 0
check_eitemcheck_eitem: '1000'
check_function '1000'
check_functionret0
check_atomcheck_atom:
check_atomcheck_atom:Checking for character constant
check_literalcheck_literal:lit=' %' idx=10 '1000'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=10 '1000'
check_literal  '%' != '1'
check_literalcheck_literal: ret0
check_atomcheck_atom:Checking for string
check_literalcheck_literal:lit=' "' idx=10 '1000'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=10 '1000'
check_literal  '"' != '1'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
check_floatFltval:'1000' float:10.000000e+02
check_floatcheck_float: ret0
check_integercheck_integer: '1000'
check_integerret1
check_numbercheck_number: ret1
check_atomret1
check_eitemret1
check_expressionn commas now:0
check_literalcheck_literal:lit=' %' idx=14 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=14 ''
check_literalcheck_literal  ret0 Empty test string
check_operator'' igncomma:0
check_operatorret0:is comma: 0
check_expressionret1 '' commas:0
check_assignmentret1
scan_assignmentscan_assignment:
scan_variable'A% = A% + 1000' ref_ndeclare:1
scan_vnamescan_vname: 'A% = A% + 1000'
scan_vnamescan_vname: ret1 'A'
scan_variablescan_variable: '% = A% + 1000' vname='A'
token_is_other_keyword
token_is_other_keyword'A%' is not other keyword
scan_variableArray test ' = A% + 1000'
check_literalcheck_literal:lit='(' idx=2 ' = A% + 1000'
check_literalcheck_literal:After drop space:'(' idx=2 ' = A% + 1000'
check_literal  '(' != ' '
check_literalcheck_literal: ret0
scan_variablescan_variable:ret1 vname='A%' Integer
token_is_function
token_is_function:
token_is_function
token_is_function:A% is not function
token_is_function
token_is_function:
token_is_function
token_is_function:A% is not function
add_var_infoName:A% Idx:-1
add_var_infoAlready present
add_var_info  reference so OK
scan_variableret1
scan_assignment_equalsscan_assignment_equals:lit=' =' ' = A% + 1000'
scan_assignment_equalsscan_assignment_equals:After drop space:'= A% + 1000'
scan_assignment_equalsscan_assignment_equals:while loop:= A% + 1000
scan_assignment_equalsret1
scan_expression' A% + 1000' igncomma:0
check_eitemcheck_eitem: 'A% + 1000'
check_function 'A% + 1000'
check_functionret0
check_atomcheck_atom:
check_atomcheck_atom:Checking for character constant
check_literalcheck_literal:lit=' %' idx=5 'A% + 1000'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=5 'A% + 1000'
check_literal  '%' != 'A'
check_literalcheck_literal: ret0
check_atomcheck_atom:Checking for string
check_literalcheck_literal:lit=' "' idx=5 'A% + 1000'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=5 'A% + 1000'
check_literal  '"' != 'A'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
check_floatFltval:'' float:0.000000e+00
check_floatcheck_float: ret0
check_integercheck_integer: 'A% + 1000'
check_integercheck_integer:ret0
check_hexcheck_hex: 'A% + 1000'
check_hexcheck_hex:ret0 not '$'
check_numbercheck_number: ret0
check_proc_callcheck_proc_call:
check_textlabel'A% + 1000'
check_textlabel'A' is a text label chstr:'A'
check_textlabelExit char:%
check_textlabelcheck_textlabel:ret1 Name:'A%' Type:i
check_proc_call'A%' is text label
check_literalcheck_literal:lit=':' idx=7 ' + 1000'
check_literalcheck_literal:After drop space:':' idx=7 ' + 1000'
check_literal  ':' != ' '
check_literalcheck_literal: ret0
check_proc_callcheck_proc_call:ret0
check_variable'A% + 1000'
check_operator'A% + 1000' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'A% + 1000':
check_vnamecheck_vname ret1 '% + 1000':
check_variableName: ''
check_variablecheck_variable: Ary test ' + 1000'
check_literalcheck_literal:lit='(' idx=7 ' + 1000'
check_literalcheck_literal:After drop space:'(' idx=7 ' + 1000'
check_literal  '(' != ' '
check_literalcheck_literal: ret0
check_variablecheck_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variablecheck_variable:ret1 
check_atomret1
check_eitemret1
scan_eitemscan_eitem:
check_function 'A% + 1000'
check_functionret0
check_atomcheck_atom:
check_atomcheck_atom:Checking for character constant
check_literalcheck_literal:lit=' %' idx=5 'A% + 1000'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=5 'A% + 1000'
check_literal  '%' != 'A'
check_literalcheck_literal: ret0
check_atomcheck_atom:Checking for string
check_literalcheck_literal:lit=' "' idx=5 'A% + 1000'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=5 'A% + 1000'
check_literal  '"' != 'A'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
check_floatFltval:'' float:0.000000e+00
check_floatcheck_float: ret0
check_integercheck_integer: 'A% + 1000'
check_integercheck_integer:ret0
check_hexcheck_hex: 'A% + 1000'
check_hexcheck_hex:ret0 not '$'
check_numbercheck_number: ret0
check_proc_callcheck_proc_call:
check_textlabel'A% + 1000'
check_textlabel'A' is a text label chstr:'A'
check_textlabelExit char:%
check_textlabelcheck_textlabel:ret1 Name:'A%' Type:i
check_proc_call'A%' is text label
check_literalcheck_literal:lit=':' idx=7 ' + 1000'
check_literalcheck_literal:After drop space:':' idx=7 ' + 1000'
check_literal  ':' != ' '
check_literalcheck_literal: ret0
check_proc_callcheck_proc_call:ret0
check_variable'A% + 1000'
check_operator'A% + 1000' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'A% + 1000':
check_vnamecheck_vname ret1 '% + 1000':
check_variableName: ''
check_variablecheck_variable: Ary test ' + 1000'
check_literalcheck_literal:lit='(' idx=7 ' + 1000'
check_literalcheck_literal:After drop space:'(' idx=7 ' + 1000'
check_literal  '(' != ' '
check_literalcheck_literal: ret0
check_variablecheck_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variablecheck_variable:ret1 
check_atomret1
scan_atomscan_atom:
check_literalcheck_literal:lit=' %' idx=5 'A% + 1000'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=5 'A% + 1000'
check_literal  '%' != 'A'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' "' idx=5 'A% + 1000'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=5 'A% + 1000'
check_literal  '"' != 'A'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
check_floatFltval:'' float:0.000000e+00
check_floatcheck_float: ret0
check_integercheck_integer: 'A% + 1000'
check_integercheck_integer:ret0
check_hexcheck_hex: 'A% + 1000'
check_hexcheck_hex:ret0 not '$'
check_numbercheck_number: ret0
check_proc_callcheck_proc_call:
check_textlabel'A% + 1000'
check_textlabel'A' is a text label chstr:'A'
check_textlabelExit char:%
check_textlabelcheck_textlabel:ret1 Name:'A%' Type:i
check_proc_call'A%' is text label
check_literalcheck_literal:lit=':' idx=7 ' + 1000'
check_literalcheck_literal:After drop space:':' idx=7 ' + 1000'
check_literal  ':' != ' '
check_literalcheck_literal: ret0
check_proc_callcheck_proc_call:ret0
check_variable'A% + 1000'
check_operator'A% + 1000' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'A% + 1000':
check_vnamecheck_vname ret1 '% + 1000':
check_variableName: ''
check_variablecheck_variable: Ary test ' + 1000'
check_literalcheck_literal:lit='(' idx=7 ' + 1000'
check_literalcheck_literal:After drop space:'(' idx=7 ' + 1000'
check_literal  '(' != ' '
check_literalcheck_literal: ret0
check_variablecheck_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variablecheck_variable:ret1 
scan_variable'A% + 1000' ref_ndeclare:1
scan_vnamescan_vname: 'A% + 1000'
scan_vnamescan_vname: ret1 'A'
scan_variablescan_variable: '% + 1000' vname='A'
token_is_other_keyword
token_is_other_keyword'A%' is not other keyword
scan_variableArray test ' + 1000'
check_literalcheck_literal:lit='(' idx=7 ' + 1000'
check_literalcheck_literal:After drop space:'(' idx=7 ' + 1000'
check_literal  '(' != ' '
check_literalcheck_literal: ret0
scan_variablescan_variable:ret1 vname='A%' Integer
token_is_function
token_is_function:
token_is_function
token_is_function:A% is not function
token_is_function
token_is_function:
token_is_function
token_is_function:A% is not function
add_var_infoName:A% Idx:-1
add_var_infoAlready present
add_var_info  reference so OK
scan_variableret1
scan_atomret1
scan_expression' + 1000' Before while igncomma:0
check_operator'+ 1000' igncomma:0
check_operatorret1:is comma: 0
check_operator'+ 1000' igncomma:0
check_operatorret1:is comma: 0
scan_operatorscan_operator: ' + 1000'
check_literalcheck_literal:lit=' ,' idx=8 '+ 1000'
check_literaldropping space
check_literalcheck_literal:After drop space:',' idx=8 '+ 1000'
check_literal  ',' != '+'
check_literalcheck_literal: ret0
scan_operatorscan_operator: ret1 ' 1000' nb:0
check_operator'1000' igncomma:0
check_operatorret0:is comma: 0
scan_expression'1000' Before scan_eitem igncomma:0
scan_eitemscan_eitem:
check_function '1000'
check_functionret0
check_atomcheck_atom:
check_atomcheck_atom:Checking for character constant
check_literalcheck_literal:lit=' %' idx=9 ' 1000'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=10 '1000'
check_literal  '%' != '1'
check_literalcheck_literal: ret0
check_atomcheck_atom:Checking for string
check_literalcheck_literal:lit=' "' idx=9 ' 1000'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=10 '1000'
check_literal  '"' != '1'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
check_floatFltval:'1000' float:10.000000e+02
check_floatcheck_float: ret0
check_integercheck_integer: '1000'
check_integerret1
check_numbercheck_number: ret1
check_atomret1
scan_atomscan_atom:
check_literalcheck_literal:lit=' %' idx=9 ' 1000'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=10 '1000'
check_literal  '%' != '1'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' "' idx=9 ' 1000'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=10 '1000'
check_literal  '"' != '1'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
check_floatFltval:'1000' float:10.000000e+02
check_floatcheck_float: ret0
check_integercheck_integer: '1000'
check_integerret1
check_numbercheck_number: ret1
scan_numberscan_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
check_floatFltval:'1000' float:10.000000e+02
check_floatcheck_float: ret0
check_integercheck_integer: '1000'
check_integerret1
scan_integer'1000'
scan_integerret1
scan_integerret1  num_dig:4 intval='1000'
scan_atomret1
scan_expressionn commas now:0
check_literalcheck_literal:lit=' %' idx=14 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=14 ''
check_literalcheck_literal  ret0 Empty test string
check_operator'' igncomma:0
check_operatorret0:is comma: 0
scan_expressionret1 '' commas:0
add_var_infoName:A% Idx:-1
add_var_infoAlready present
add_var_info  reference so OK
scan_assignmentscan_assignment: ret1
scan_lineret1
check_literalcheck_literal:lit=' :' idx=14 ''
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=14 ''
check_literalcheck_literal  ret0 Empty test string
scan_line:FFFFFF0E

scan_line:''cline:''
pull_next_line:FFFFFE38

pull_next_line:''
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=14 ''
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=14 ''
check_literalcheck_literal  ret0 Empty test string
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=14 strlen:0 
pull_next_lineReading line
pull_next_line------------------------------
is_all_spacescline[0] = 'p' (112)
is_all_spacescline[1] = 'r' (114)
is_all_spacescline[2] = 'i' (105)
is_all_spacescline[3] = 'n' (110)
is_all_spacescline[4] = 't' (116)
is_all_spacescline[5] = ' ' (32)
is_all_spacescline[6] = 'A' (65)
is_all_spacescline[7] = '%' (37)
is_all_spacesIs not all spaces
pull_next_lineGot a line: 'print A%'
pull_next_lineret1
check_literalcheck_literal:lit='REM' idx=0 'print A%'
check_literalcheck_literal:After drop space:'REM' idx=0 'print A%'
check_literal  'R' != 'p'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'print A%'
check_literalcheck_literal:After drop space:'REM&' idx=0 'print A%'
check_literal  'R' != 'p'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'print A%'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'print A%'
check_literal  'R' != 'p'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'print A%'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'print A%'
check_literal  'R' != 'p'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'print A%'
check_operator'print A%' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'print A%':
check_vnamecheck_vname ret1 ' A%':
check_variableName: ''
check_variablecheck_variable: Ary test ' A%'
check_literalcheck_literal:lit='(' idx=5 ' A%'
check_literalcheck_literal:After drop space:'(' idx=5 ' A%'
check_literal  '(' != ' '
check_literalcheck_literal: ret0
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=5 ' A%'
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=6 'A%'
check_literal  '=' != 'A'
check_literalcheck_literal: ret0
check_assignmentcheck_assignment:ret0
check_declare'print A%'
check_literalcheck_literal:lit=' LOCAL' idx=0 'print A%'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'print A%'
check_literal  'L' != 'p'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'print A%'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'print A%'
check_literal  'G' != 'p'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'print A%'
check_textlabel'print' is a text label chstr:'t'
check_textlabelExit char: 
check_textlabelcheck_textlabel:ret1 Name:'print' Type:f
check_literalcheck_literal:lit='::' idx=5 ' A%'
check_literalcheck_literal:After drop space:'::' idx=5 ' A%'
check_literal  ':' != ' '
check_literalcheck_literal: ret0
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'print A%'
check_textlabel'print' is a text label chstr:'t'
check_textlabelExit char: 
check_textlabelcheck_textlabel:ret1 Name:'print' Type:f
check_proc_call'print' is text label
check_literalcheck_literal:lit=':' idx=5 ' A%'
check_literalcheck_literal:After drop space:':' idx=5 ' A%'
check_literal  ':' != ' '
check_literalcheck_literal: ret0
check_proc_callcheck_proc_call:ret0
check_input'print A%'
check_literalcheck_literal:lit=' INPUT' idx=0 'print A%'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'print A%'
check_literal  'I' != 'p'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'print A%'
check_literalcheck_literal:lit=' PRINT' idx=0 'print A%'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'print A%'
check_literalcheck_literal:After while(): A%
check_literalret1 Match. '' == ''
check_printret1
scan_printprint type:0
check_literalcheck_literal:lit=' PRINT' idx=0 'print A%'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'print A%'
check_literalcheck_literal:After while(): A%
check_literalret1 Match. '' == ''
check_expression' A%'
check_eitemcheck_eitem: 'A%'
check_function 'A%'
check_functionret0
check_atomcheck_atom:
check_atomcheck_atom:Checking for character constant
check_literalcheck_literal:lit=' %' idx=6 'A%'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=6 'A%'
check_literal  '%' != 'A'
check_literalcheck_literal: ret0
check_atomcheck_atom:Checking for string
check_literalcheck_literal:lit=' "' idx=6 'A%'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=6 'A%'
check_literal  '"' != 'A'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
check_floatFltval:'' float:0.000000e+00
check_floatcheck_float: ret0
check_integercheck_integer: 'A%'
check_integercheck_integer:ret0
check_hexcheck_hex: 'A%'
check_hexcheck_hex:ret0 not '$'
check_numbercheck_number: ret0
check_proc_callcheck_proc_call:
check_textlabel'A%'
check_textlabel'A' is a text label chstr:'A'
check_textlabelExit char:%
check_textlabelcheck_textlabel:ret1 Name:'A%' Type:i
check_proc_call'A%' is text label
check_literalcheck_literal:lit=':' idx=8 ''
check_literalcheck_literal:After drop space:':' idx=8 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_variable'A%'
check_operator'A%' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'A%':
check_vnamecheck_vname ret1 '%':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=8 ''
check_literalcheck_literal:After drop space:'(' idx=8 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variablecheck_variable:ret1 
check_atomret1
check_eitemret1
check_operator'' igncomma:1
check_operatorret0:is comma: 0
check_expressionret1 '' commas:0
check_literalcheck_literal:lit=' PRINT' idx=0 'print A%'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'print A%'
check_literalcheck_literal:After while(): A%
check_literalret1 Match. '' == ''
scan_printBefore while
check_expression' A%'
check_eitemcheck_eitem: 'A%'
check_function 'A%'
check_functionret0
check_atomcheck_atom:
check_atomcheck_atom:Checking for character constant
check_literalcheck_literal:lit=' %' idx=6 'A%'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=6 'A%'
check_literal  '%' != 'A'
check_literalcheck_literal: ret0
check_atomcheck_atom:Checking for string
check_literalcheck_literal:lit=' "' idx=6 'A%'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=6 'A%'
check_literal  '"' != 'A'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
check_floatFltval:'' float:0.000000e+00
check_floatcheck_float: ret0
check_integercheck_integer: 'A%'
check_integercheck_integer:ret0
check_hexcheck_hex: 'A%'
check_hexcheck_hex:ret0 not '$'
check_numbercheck_number: ret0
check_proc_callcheck_proc_call:
check_textlabel'A%'
check_textlabel'A' is a text label chstr:'A'
check_textlabelExit char:%
check_textlabelcheck_textlabel:ret1 Name:'A%' Type:i
check_proc_call'A%' is text label
check_literalcheck_literal:lit=':' idx=8 ''
check_literalcheck_literal:After drop space:':' idx=8 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_variable'A%'
check_operator'A%' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'A%':
check_vnamecheck_vname ret1 '%':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=8 ''
check_literalcheck_literal:After drop space:'(' idx=8 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variablecheck_variable:ret1 
check_atomret1
check_eitemret1
check_operator'' igncomma:1
check_operatorret0:is comma: 0
check_expressionret1 '' commas:0
scan_printCheck expression ok, in while loop
scan_printScan expression
scan_expression' A%' igncomma:1
check_eitemcheck_eitem: 'A%'
check_function 'A%'
check_functionret0
check_atomcheck_atom:
check_atomcheck_atom:Checking for character constant
check_literalcheck_literal:lit=' %' idx=6 'A%'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=6 'A%'
check_literal  '%' != 'A'
check_literalcheck_literal: ret0
check_atomcheck_atom:Checking for string
check_literalcheck_literal:lit=' "' idx=6 'A%'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=6 'A%'
check_literal  '"' != 'A'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
check_floatFltval:'' float:0.000000e+00
check_floatcheck_float: ret0
check_integercheck_integer: 'A%'
check_integercheck_integer:ret0
check_hexcheck_hex: 'A%'
check_hexcheck_hex:ret0 not '$'
check_numbercheck_number: ret0
check_proc_callcheck_proc_call:
check_textlabel'A%'
check_textlabel'A' is a text label chstr:'A'
check_textlabelExit char:%
check_textlabelcheck_textlabel:ret1 Name:'A%' Type:i
check_proc_call'A%' is text label
check_literalcheck_literal:lit=':' idx=8 ''
check_literalcheck_literal:After drop space:':' idx=8 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_variable'A%'
check_operator'A%' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'A%':
check_vnamecheck_vname ret1 '%':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=8 ''
check_literalcheck_literal:After drop space:'(' idx=8 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variablecheck_variable:ret1 
check_atomret1
check_eitemret1
scan_eitemscan_eitem:
check_function 'A%'
check_functionret0
check_atomcheck_atom:
check_atomcheck_atom:Checking for character constant
check_literalcheck_literal:lit=' %' idx=6 'A%'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=6 'A%'
check_literal  '%' != 'A'
check_literalcheck_literal: ret0
check_atomcheck_atom:Checking for string
check_literalcheck_literal:lit=' "' idx=6 'A%'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=6 'A%'
check_literal  '"' != 'A'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
check_floatFltval:'' float:0.000000e+00
check_floatcheck_float: ret0
check_integercheck_integer: 'A%'
check_integercheck_integer:ret0
check_hexcheck_hex: 'A%'
check_hexcheck_hex:ret0 not '$'
check_numbercheck_number: ret0
check_proc_callcheck_proc_call:
check_textlabel'A%'
check_textlabel'A' is a text label chstr:'A'
check_textlabelExit char:%
check_textlabelcheck_textlabel:ret1 Name:'A%' Type:i
check_proc_call'A%' is text label
check_literalcheck_literal:lit=':' idx=8 ''
check_literalcheck_literal:After drop space:':' idx=8 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_variable'A%'
check_operator'A%' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'A%':
check_vnamecheck_vname ret1 '%':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=8 ''
check_literalcheck_literal:After drop space:'(' idx=8 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variablecheck_variable:ret1 
check_atomret1
scan_atomscan_atom:
check_literalcheck_literal:lit=' %' idx=6 'A%'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=6 'A%'
check_literal  '%' != 'A'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' "' idx=6 'A%'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=6 'A%'
check_literal  '"' != 'A'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
check_floatFltval:'' float:0.000000e+00
check_floatcheck_float: ret0
check_integercheck_integer: 'A%'
check_integercheck_integer:ret0
check_hexcheck_hex: 'A%'
check_hexcheck_hex:ret0 not '$'
check_numbercheck_number: ret0
check_proc_callcheck_proc_call:
check_textlabel'A%'
check_textlabel'A' is a text label chstr:'A'
check_textlabelExit char:%
check_textlabelcheck_textlabel:ret1 Name:'A%' Type:i
check_proc_call'A%' is text label
check_literalcheck_literal:lit=':' idx=8 ''
check_literalcheck_literal:After drop space:':' idx=8 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_variable'A%'
check_operator'A%' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'A%':
check_vnamecheck_vname ret1 '%':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=8 ''
check_literalcheck_literal:After drop space:'(' idx=8 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variablecheck_variable:ret1 
scan_variable'A%' ref_ndeclare:1
scan_vnamescan_vname: 'A%'
scan_vnamescan_vname: ret1 'A'
scan_variablescan_variable: '%' vname='A'
token_is_other_keyword
token_is_other_keyword'A%' is not other keyword
scan_variableArray test ''
check_literalcheck_literal:lit='(' idx=8 ''
check_literalcheck_literal:After drop space:'(' idx=8 ''
check_literalcheck_literal  ret0 Empty test string
scan_variablescan_variable:ret1 vname='A%' Integer
token_is_function
token_is_function:
token_is_function
token_is_function:A% is not function
token_is_function
token_is_function:
token_is_function
token_is_function:A% is not function
add_var_infoName:A% Idx:-1
add_var_infoAlready present
add_var_info  reference so OK
scan_variableret1
scan_atomret1
scan_expression'' Before while igncomma:1
check_operator'' igncomma:1
check_operatorret0:is comma: 268560071
scan_expressionret1 '' commas:0
scan_printAfter scan expression I
check_literalcheck_literal:lit=' ,' idx=8 ''
check_literaldropping space
check_literalcheck_literal:After drop space:',' idx=8 ''
check_literalcheck_literal  ret0 Empty test string
scan_printAfter scan expression II
check_literalcheck_literal:lit=' ;' idx=8 ''
check_literaldropping space
check_literalcheck_literal:After drop space:';' idx=8 ''
check_literalcheck_literal  ret0 Empty test string
scan_printChecking if delimiter was present
scan_printNo delimiter present
check_expression''
check_eitemcheck_eitem: ''
check_function ''
check_functionret0
check_atomcheck_atom:
check_atomcheck_atom:Checking for character constant
check_literalcheck_literal:lit=' %' idx=8 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=8 ''
check_literalcheck_literal  ret0 Empty test string
check_atomcheck_atom:Checking for string
check_literalcheck_literal:lit=' "' idx=8 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=8 ''
check_literalcheck_literal  ret0 Empty test string
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
check_floatFltval:'' float:0.000000e+00
check_floatcheck_float: ret0
check_integercheck_integer: ''
check_integercheck_integer:ret0
check_hexcheck_hex: ''
check_hexcheck_hex:ret0 not '$'
check_numbercheck_number: ret0
check_proc_callcheck_proc_call:
check_textlabel''
check_textlabel'' is a text label chstr:'L'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'' Type:f
check_proc_call'' is text label
check_literalcheck_literal:lit=':' idx=8 ''
check_literalcheck_literal:After drop space:':' idx=8 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_variable''
check_operator'' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname '':
check_vnamecheck_vname ret0 '':
check_variablecheck_variable:ret0 
check_atomcheck_atom:ret0
check_sub_exprcheck_sub_expr:
check_literalcheck_literal:lit=' (' idx=8 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'(' idx=8 ''
check_literalcheck_literal  ret0 Empty test string
check_sub_exprret0: No '('
check_addr_namecheck_addr_name: ''
check_vnamecheck_vname '':
check_vnamecheck_vname ret0 '':
check_addr_namecheck_addr_name: ret0
check_eitemcheck_eitem:ret0
check_operator'' igncomma:1
check_operatorret0:is comma: 0
check_expressionret0 ''
scan_printCheck for trailing delimiter
check_literalcheck_literal:lit=' ;' idx=8 ''
check_literaldropping space
check_literalcheck_literal:After drop space:';' idx=8 ''
check_literalcheck_literal  ret0 Empty test string
check_literalcheck_literal:lit=' ,' idx=8 ''
check_literaldropping space
check_literalcheck_literal:After drop space:',' idx=8 ''
check_literalcheck_literal  ret0 Empty test string
scan_printscan_print:ret1 Expression 
scan_lineret1 print
check_literalcheck_literal:lit=' :' idx=8 ''
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=8 ''
check_literalcheck_literal  ret0 Empty test string
scan_line:FFFFFF0E

scan_line:''cline:''
pull_next_line:FFFFFE38

pull_next_line:''
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=8 ''
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=8 ''
check_literalcheck_literal  ret0 Empty test string
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=8 strlen:0 
pull_next_lineReading line
pull_next_line------------------------------
is_all_spacesIs all spaces
pull_next_lineLine was all spaces
pull_next_lineReading line
pull_next_line------------------------------
is_all_spacescline[0] = 'B' (66)
is_all_spacescline[1] = '%' (37)
is_all_spacescline[2] = ' ' (32)
is_all_spacescline[3] = '=' (61)
is_all_spacescline[4] = ' ' (32)
is_all_spacescline[5] = '1' (49)
is_all_spacescline[6] = '0' (48)
is_all_spacescline[7] = '0' (48)
is_all_spacescline[8] = '0' (48)
is_all_spacescline[9] = ' ' (32)
is_all_spacescline[10] = '+' (43)
is_all_spacescline[11] = ' ' (32)
is_all_spacescline[12] = '1' (49)
is_all_spacescline[13] = '0' (48)
is_all_spacescline[14] = '0' (48)
is_all_spacescline[15] = ' ' (32)
is_all_spacescline[16] = '/' (47)
is_all_spacescline[17] = ' ' (32)
is_all_spacescline[18] = '2' (50)
is_all_spacescline[19] = ' ' (32)
is_all_spacescline[20] = '*' (42)
is_all_spacescline[21] = ' ' (32)
is_all_spacescline[22] = '3' (51)
is_all_spacesIs not all spaces
pull_next_lineGot a line: 'B% = 1000 + 100 / 2 * 3'
pull_next_lineret1
check_literalcheck_literal:lit='REM' idx=0 'B% = 1000 + 100 / 2 * 3'
check_literalcheck_literal:After drop space:'REM' idx=0 'B% = 1000 + 100 / 2 * 3'
check_literal  'R' != 'B'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'B% = 1000 + 100 / 2 * 3'
check_literalcheck_literal:After drop space:'REM&' idx=0 'B% = 1000 + 100 / 2 * 3'
check_literal  'R' != 'B'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'B% = 1000 + 100 / 2 * 3'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'B% = 1000 + 100 / 2 * 3'
check_literal  'R' != 'B'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'B% = 1000 + 100 / 2 * 3'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'B% = 1000 + 100 / 2 * 3'
check_literal  'R' != 'B'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'B% = 1000 + 100 / 2 * 3'
check_operator'B% = 1000 + 100 / 2 * 3' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'B% = 1000 + 100 / 2 * 3':
check_vnamecheck_vname ret1 '% = 1000 + 100 / 2 * 3':
check_variableName: ''
check_variablecheck_variable: Ary test ' = 1000 + 100 / 2 * 3'
check_literalcheck_literal:lit='(' idx=2 ' = 1000 + 100 / 2 * 3'
check_literalcheck_literal:After drop space:'(' idx=2 ' = 1000 + 100 / 2 * 3'
check_literal  '(' != ' '
check_literalcheck_literal: ret0
check_variablecheck_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=2 ' = 1000 + 100 / 2 * 3'
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=3 '= 1000 + 100 / 2 * 3'
check_literalcheck_literal:After while(): 1000 + 100 / 2 * 3
check_literalret1 Match. '' == ''
check_expression' 1000 + 100 / 2 * 3'
check_eitemcheck_eitem: '1000 + 100 / 2 * 3'
check_function '1000 + 100 / 2 * 3'
check_functionret0
check_atomcheck_atom:
check_atomcheck_atom:Checking for character constant
check_literalcheck_literal:lit=' %' idx=5 '1000 + 100 / 2 * 3'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=5 '1000 + 100 / 2 * 3'
check_literal  '%' != '1'
check_literalcheck_literal: ret0
check_atomcheck_atom:Checking for string
check_literalcheck_literal:lit=' "' idx=5 '1000 + 100 / 2 * 3'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=5 '1000 + 100 / 2 * 3'
check_literal  '"' != '1'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
check_floatFltval:'1000' float:10.000000e+02
check_floatcheck_float: ret0
check_integercheck_integer: '1000 + 100 / 2 * 3'
check_integerret1
check_numbercheck_number: ret1
check_atomret1
check_eitemret1
check_operator'+ 100 / 2 * 3' igncomma:0
check_operatorret1:is comma: 0
check_operator'100 / 2 * 3' igncomma:0
check_operatorret0:is comma: 0
check_eitemcheck_eitem: '100 / 2 * 3'
check_function '100 / 2 * 3'
check_functionret0
check_atomcheck_atom:
check_atomcheck_atom:Checking for character constant
check_literalcheck_literal:lit=' %' idx=12 '100 / 2 * 3'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=12 '100 / 2 * 3'
check_literal  '%' != '1'
check_literalcheck_literal: ret0
check_atomcheck_atom:Checking for string
check_literalcheck_literal:lit=' "' idx=12 '100 / 2 * 3'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=12 '100 / 2 * 3'
check_literal  '"' != '1'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
check_floatFltval:'100' float:10.000000e+01
check_floatcheck_float: ret0
check_integercheck_integer: '100 / 2 * 3'
check_integerret1
check_numbercheck_number: ret1
check_atomret1
check_eitemret1
check_expressionn commas now:0
check_literalcheck_literal:lit=' %' idx=15 ' / 2 * 3'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=16 '/ 2 * 3'
check_literal  '%' != '/'
check_literalcheck_literal: ret0
check_operator'/ 2 * 3' igncomma:0
check_operatorret1:is comma: 0
check_operator'2 * 3' igncomma:0
check_operatorret0:is comma: 0
check_eitemcheck_eitem: '2 * 3'
check_function '2 * 3'
check_functionret0
check_atomcheck_atom:
check_atomcheck_atom:Checking for character constant
check_literalcheck_literal:lit=' %' idx=18 '2 * 3'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=18 '2 * 3'
check_literal  '%' != '2'
check_literalcheck_literal: ret0
check_atomcheck_atom:Checking for string
check_literalcheck_literal:lit=' "' idx=18 '2 * 3'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=18 '2 * 3'
check_literal  '"' != '2'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
check_floatFltval:'2' float:2.000000e+00
check_floatcheck_float: ret0
check_integercheck_integer: '2 * 3'
check_integerret1
check_numbercheck_number: ret1
check_atomret1
check_eitemret1
check_expressionn commas now:0
check_literalcheck_literal:lit=' %' idx=19 ' * 3'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=20 '* 3'
check_literal  '%' != '*'
check_literalcheck_literal: ret0
check_operator'* 3' igncomma:0
check_operatorret1:is comma: 0
check_operator'3' igncomma:0
check_operatorret0:is comma: 0
check_eitemcheck_eitem: '3'
check_function '3'
check_functionret0
check_atomcheck_atom:
check_atomcheck_atom:Checking for character constant
check_literalcheck_literal:lit=' %' idx=22 '3'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=22 '3'
check_literal  '%' != '3'
check_literalcheck_literal: ret0
check_atomcheck_atom:Checking for string
check_literalcheck_literal:lit=' "' idx=22 '3'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=22 '3'
check_literal  '"' != '3'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
check_floatFltval:'3' float:3.000000e+00
check_floatcheck_float: ret0
check_integercheck_integer: '3'
check_integerret1
check_numbercheck_number: ret1
check_atomret1
check_eitemret1
check_expressionn commas now:0
check_literalcheck_literal:lit=' %' idx=23 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=23 ''
check_literalcheck_literal  ret0 Empty test string
check_operator'' igncomma:0
check_operatorret0:is comma: 0
check_expressionret1 '' commas:0
check_assignmentret1
scan_assignmentscan_assignment:
scan_variable'B% = 1000 + 100 / 2 * 3' ref_ndeclare:1
scan_vnamescan_vname: 'B% = 1000 + 100 / 2 * 3'
scan_vnamescan_vname: ret1 'B'
scan_variablescan_variable: '% = 1000 + 100 / 2 * 3' vname='B'
token_is_other_keyword
token_is_other_keyword'B%' is not other keyword
scan_variableArray test ' = 1000 + 100 / 2 * 3'
check_literalcheck_literal:lit='(' idx=2 ' = 1000 + 100 / 2 * 3'
check_literalcheck_literal:After drop space:'(' idx=2 ' = 1000 + 100 / 2 * 3'
check_literal  '(' != ' '
check_literalcheck_literal: ret0
scan_variablescan_variable:ret1 vname='B%' Integer
token_is_function
token_is_function:
token_is_function
token_is_function:B% is not function
token_is_function
token_is_function:
token_is_function
token_is_function:B% is not function
add_var_infoName:B% Idx:-1
add_var_infoAlready present
add_var_info  reference so OK
scan_variableret1
scan_assignment_equalsscan_assignment_equals:lit=' =' ' = 1000 + 100 / 2 * 3'
scan_assignment_equalsscan_assignment_equals:After drop space:'= 1000 + 100 / 2 * 3'
scan_assignment_equalsscan_assignment_equals:while loop:= 1000 + 100 / 2 * 3
scan_assignment_equalsret1
scan_expression' 1000 + 100 / 2 * 3' igncomma:0
check_eitemcheck_eitem: '1000 + 100 / 2 * 3'
check_function '1000 + 100 / 2 * 3'
check_functionret0
check_atomcheck_atom:
check_atomcheck_atom:Checking for character constant
check_literalcheck_literal:lit=' %' idx=5 '1000 + 100 / 2 * 3'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=5 '1000 + 100 / 2 * 3'
check_literal  '%' != '1'
check_literalcheck_literal: ret0
check_atomcheck_atom:Checking for string
check_literalcheck_literal:lit=' "' idx=5 '1000 + 100 / 2 * 3'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=5 '1000 + 100 / 2 * 3'
check_literal  '"' != '1'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
check_floatFltval:'1000' float:10.000000e+02
check_floatcheck_float: ret0
check_integercheck_integer: '1000 + 100 / 2 * 3'
check_integerret1
check_numbercheck_number: ret1
check_atomret1
check_eitemret1
scan_eitemscan_eitem:
check_function '1000 + 100 / 2 * 3'
check_functionret0
check_atomcheck_atom:
check_atomcheck_atom:Checking for character constant
check_literalcheck_literal:lit=' %' idx=5 '1000 + 100 / 2 * 3'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=5 '1000 + 100 / 2 * 3'
check_literal  '%' != '1'
check_literalcheck_literal: ret0
check_atomcheck_atom:Checking for string
check_literalcheck_literal:lit=' "' idx=5 '1000 + 100 / 2 * 3'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=5 '1000 + 100 / 2 * 3'
check_literal  '"' != '1'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
check_floatFltval:'1000' float:10.000000e+02
check_floatcheck_float: ret0
check_integercheck_integer: '1000 + 100 / 2 * 3'
check_integerret1
check_numbercheck_number: ret1
check_atomret1
scan_atomscan_atom:
check_literalcheck_literal:lit=' %' idx=5 '1000 + 100 / 2 * 3'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=5 '1000 + 100 / 2 * 3'
check_literal  '%' != '1'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' "' idx=5 '1000 + 100 / 2 * 3'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=5 '1000 + 100 / 2 * 3'
check_literal  '"' != '1'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
check_floatFltval:'1000' float:10.000000e+02
check_floatcheck_float: ret0
check_integercheck_integer: '1000 + 100 / 2 * 3'
check_integerret1
check_numbercheck_number: ret1
scan_numberscan_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
check_floatFltval:'1000' float:10.000000e+02
check_floatcheck_float: ret0
check_integercheck_integer: '1000 + 100 / 2 * 3'
check_integerret1
scan_integer'1000 + 100 / 2 * 3'
scan_integerret1
scan_integerret1  num_dig:4 intval='1000'
scan_atomret1
scan_expression' + 100 / 2 * 3' Before while igncomma:0
check_operator'+ 100 / 2 * 3' igncomma:0
check_operatorret1:is comma: 0
check_operator'+ 100 / 2 * 3' igncomma:0
check_operatorret1:is comma: 0
scan_operatorscan_operator: ' + 100 / 2 * 3'
check_literalcheck_literal:lit=' ,' idx=10 '+ 100 / 2 * 3'
check_literaldropping space
check_literalcheck_literal:After drop space:',' idx=10 '+ 100 / 2 * 3'
check_literal  ',' != '+'
check_literalcheck_literal: ret0
scan_operatorscan_operator: ret1 ' 100 / 2 * 3' nb:0
check_operator'100 / 2 * 3' igncomma:0
check_operatorret0:is comma: 0
scan_expression'100 / 2 * 3' Before scan_eitem igncomma:0
scan_eitemscan_eitem:
check_function '100 / 2 * 3'
check_functionret0
check_atomcheck_atom:
check_atomcheck_atom:Checking for character constant
check_literalcheck_literal:lit=' %' idx=11 ' 100 / 2 * 3'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=12 '100 / 2 * 3'
check_literal  '%' != '1'
check_literalcheck_literal: ret0
check_atomcheck_atom:Checking for string
check_literalcheck_literal:lit=' "' idx=11 ' 100 / 2 * 3'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=12 '100 / 2 * 3'
check_literal  '"' != '1'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
check_floatFltval:'100' float:10.000000e+01
check_floatcheck_float: ret0
check_integercheck_integer: '100 / 2 * 3'
check_integerret1
check_numbercheck_number: ret1
check_atomret1
scan_atomscan_atom:
check_literalcheck_literal:lit=' %' idx=11 ' 100 / 2 * 3'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=12 '100 / 2 * 3'
check_literal  '%' != '1'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' "' idx=11 ' 100 / 2 * 3'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=12 '100 / 2 * 3'
check_literal  '"' != '1'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
check_floatFltval:'100' float:10.000000e+01
check_floatcheck_float: ret0
check_integercheck_integer: '100 / 2 * 3'
check_integerret1
check_numbercheck_number: ret1
scan_numberscan_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
check_floatFltval:'100' float:10.000000e+01
check_floatcheck_float: ret0
check_integercheck_integer: '100 / 2 * 3'
check_integerret1
scan_integer'100 / 2 * 3'
scan_integerret1
scan_integerret1  num_dig:3 intval='100'
scan_atomret1
scan_expressionn commas now:0
check_literalcheck_literal:lit=' %' idx=15 ' / 2 * 3'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=16 '/ 2 * 3'
check_literal  '%' != '/'
check_literalcheck_literal: ret0
check_operator'/ 2 * 3' igncomma:0
check_operatorret1:is comma: 0
check_operator'+ 100 / 2 * 3' igncomma:0
check_operatorret1:is comma: 0
scan_operatorscan_operator: ' / 2 * 3'
check_literalcheck_literal:lit=' ,' idx=16 '/ 2 * 3'
check_literaldropping space
check_literalcheck_literal:After drop space:',' idx=16 '/ 2 * 3'
check_literal  ',' != '/'
check_literalcheck_literal: ret0
scan_operatorscan_operator: ret1 ' 2 * 3' nb:0
check_operator'2 * 3' igncomma:0
check_operatorret0:is comma: 0
scan_expression'2 * 3' Before scan_eitem igncomma:0
scan_eitemscan_eitem:
check_function '2 * 3'
check_functionret0
check_atomcheck_atom:
check_atomcheck_atom:Checking for character constant
check_literalcheck_literal:lit=' %' idx=17 ' 2 * 3'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=18 '2 * 3'
check_literal  '%' != '2'
check_literalcheck_literal: ret0
check_atomcheck_atom:Checking for string
check_literalcheck_literal:lit=' "' idx=17 ' 2 * 3'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=18 '2 * 3'
check_literal  '"' != '2'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
check_floatFltval:'2' float:2.000000e+00
check_floatcheck_float: ret0
check_integercheck_integer: '2 * 3'
check_integerret1
check_numbercheck_number: ret1
check_atomret1
scan_atomscan_atom:
check_literalcheck_literal:lit=' %' idx=17 ' 2 * 3'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=18 '2 * 3'
check_literal  '%' != '2'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' "' idx=17 ' 2 * 3'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=18 '2 * 3'
check_literal  '"' != '2'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
check_floatFltval:'2' float:2.000000e+00
check_floatcheck_float: ret0
check_integercheck_integer: '2 * 3'
check_integerret1
check_numbercheck_number: ret1
scan_numberscan_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
check_floatFltval:'2' float:2.000000e+00
check_floatcheck_float: ret0
check_integercheck_integer: '2 * 3'
check_integerret1
scan_integer'2 * 3'
scan_integerret1
scan_integerret1  num_dig:1 intval='2'
scan_atomret1
scan_expressionn commas now:0
check_literalcheck_literal:lit=' %' idx=19 ' * 3'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=20 '* 3'
check_literal  '%' != '*'
check_literalcheck_literal: ret0
check_operator'* 3' igncomma:0
check_operatorret1:is comma: 0
check_operator'+ 100 / 2 * 3' igncomma:0
check_operatorret1:is comma: 0
scan_operatorscan_operator: ' * 3'
check_literalcheck_literal:lit=' ,' idx=20 '* 3'
check_literaldropping space
check_literalcheck_literal:After drop space:',' idx=20 '* 3'
check_literal  ',' != '*'
check_literalcheck_literal: ret0
scan_operatorscan_operator: ret1 ' 3' nb:0
check_operator'3' igncomma:0
check_operatorret0:is comma: 0
scan_expression'3' Before scan_eitem igncomma:0
scan_eitemscan_eitem:
check_function '3'
check_functionret0
check_atomcheck_atom:
check_atomcheck_atom:Checking for character constant
check_literalcheck_literal:lit=' %' idx=21 ' 3'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=22 '3'
check_literal  '%' != '3'
check_literalcheck_literal: ret0
check_atomcheck_atom:Checking for string
check_literalcheck_literal:lit=' "' idx=21 ' 3'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=22 '3'
check_literal  '"' != '3'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
check_floatFltval:'3' float:3.000000e+00
check_floatcheck_float: ret0
check_integercheck_integer: '3'
check_integerret1
check_numbercheck_number: ret1
check_atomret1
scan_atomscan_atom:
check_literalcheck_literal:lit=' %' idx=21 ' 3'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=22 '3'
check_literal  '%' != '3'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' "' idx=21 ' 3'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=22 '3'
check_literal  '"' != '3'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
check_floatFltval:'3' float:3.000000e+00
check_floatcheck_float: ret0
check_integercheck_integer: '3'
check_integerret1
check_numbercheck_number: ret1
scan_numberscan_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
check_floatFltval:'3' float:3.000000e+00
check_floatcheck_float: ret0
check_integercheck_integer: '3'
check_integerret1
scan_integer'3'
scan_integerret1
scan_integerret1  num_dig:1 intval='3'
scan_atomret1
scan_expressionn commas now:0
check_literalcheck_literal:lit=' %' idx=23 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=23 ''
check_literalcheck_literal  ret0 Empty test string
check_operator'' igncomma:0
check_operatorret0:is comma: 0
scan_expressionret1 '' commas:0
add_var_infoName:B% Idx:-1
add_var_infoAlready present
add_var_info  reference so OK
scan_assignmentscan_assignment: ret1
scan_lineret1
check_literalcheck_literal:lit=' :' idx=23 ''
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=23 ''
check_literalcheck_literal  ret0 Empty test string
scan_line:FFFFFF0E

scan_line:''cline:''
pull_next_line:FFFFFE38

pull_next_line:''
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=23 ''
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=23 ''
check_literalcheck_literal  ret0 Empty test string
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=23 strlen:0 
pull_next_lineReading line
pull_next_line------------------------------
is_all_spacesIs all spaces
pull_next_lineLine was all spaces
pull_next_lineReading line
pull_next_line------------------------------
is_all_spacescline[0] = 'p' (112)
is_all_spacescline[1] = 'r' (114)
is_all_spacescline[2] = 'i' (105)
is_all_spacescline[3] = 'n' (110)
is_all_spacescline[4] = 't' (116)
is_all_spacescline[5] = ' ' (32)
is_all_spacescline[6] = '"' (34)
is_all_spacescline[7] = 'B' (66)
is_all_spacescline[8] = ':' (58)
is_all_spacescline[9] = '"' (34)
is_all_spacescline[10] = ';' (59)
is_all_spacescline[11] = 'B' (66)
is_all_spacescline[12] = '%' (37)
is_all_spacesIs not all spaces
pull_next_lineGot a line: 'print "B:";B%'
pull_next_lineret1
check_literalcheck_literal:lit='REM' idx=0 'print "B:";B%'
check_literalcheck_literal:After drop space:'REM' idx=0 'print "B:";B%'
check_literal  'R' != 'p'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'print "B:";B%'
check_literalcheck_literal:After drop space:'REM&' idx=0 'print "B:";B%'
check_literal  'R' != 'p'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'print "B:";B%'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'print "B:";B%'
check_literal  'R' != 'p'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'print "B:";B%'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'print "B:";B%'
check_literal  'R' != 'p'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'print "B:";B%'
check_operator'print "B:";B%' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'print "B:";B%':
check_vnamecheck_vname ret1 ' "B:";B%':
check_variableName: ''
check_variablecheck_variable: Ary test ' "B:";B%'
check_literalcheck_literal:lit='(' idx=5 ' "B:";B%'
check_literalcheck_literal:After drop space:'(' idx=5 ' "B:";B%'
check_literal  '(' != ' '
check_literalcheck_literal: ret0
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=5 ' "B:";B%'
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=6 '"B:";B%'
check_literal  '=' != '"'
check_literalcheck_literal: ret0
check_assignmentcheck_assignment:ret0
check_declare'print "B:";B%'
check_literalcheck_literal:lit=' LOCAL' idx=0 'print "B:";B%'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'print "B:";B%'
check_literal  'L' != 'p'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'print "B:";B%'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'print "B:";B%'
check_literal  'G' != 'p'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'print "B:";B%'
check_textlabel'print' is a text label chstr:'t'
check_textlabelExit char: 
check_textlabelcheck_textlabel:ret1 Name:'print' Type:f
check_literalcheck_literal:lit='::' idx=5 ' "B:";B%'
check_literalcheck_literal:After drop space:'::' idx=5 ' "B:";B%'
check_literal  ':' != ' '
check_literalcheck_literal: ret0
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'print "B:";B%'
check_textlabel'print' is a text label chstr:'t'
check_textlabelExit char: 
check_textlabelcheck_textlabel:ret1 Name:'print' Type:f
check_proc_call'print' is text label
check_literalcheck_literal:lit=':' idx=5 ' "B:";B%'
check_literalcheck_literal:After drop space:':' idx=5 ' "B:";B%'
check_literal  ':' != ' '
check_literalcheck_literal: ret0
check_proc_callcheck_proc_call:ret0
check_input'print "B:";B%'
check_literalcheck_literal:lit=' INPUT' idx=0 'print "B:";B%'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'print "B:";B%'
check_literal  'I' != 'p'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'print "B:";B%'
check_literalcheck_literal:lit=' PRINT' idx=0 'print "B:";B%'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'print "B:";B%'
check_literalcheck_literal:After while(): "B:";B%
check_literalret1 Match. '' == ''
check_printret1
scan_printprint type:0
check_literalcheck_literal:lit=' PRINT' idx=0 'print "B:";B%'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'print "B:";B%'
check_literalcheck_literal:After while(): "B:";B%
check_literalret1 Match. '' == ''
check_expression' "B:";B%'
check_eitemcheck_eitem: '"B:";B%'
check_function '"B:";B%'
check_functionret0
check_atomcheck_atom:
check_atomcheck_atom:Checking for character constant
check_literalcheck_literal:lit=' %' idx=6 '"B:";B%'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=6 '"B:";B%'
check_literal  '%' != '"'
check_literalcheck_literal: ret0
check_atomcheck_atom:Checking for string
check_literalcheck_literal:lit=' "' idx=6 '"B:";B%'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=6 '"B:";B%'
check_literalcheck_literal:After while():B:";B%
check_literalret1 Match. '' == ''
check_atomret1
check_eitemret1
check_operator';B%' igncomma:1
check_operatorret0:is comma: 0
check_expressionret1 ';B%' commas:0
check_literalcheck_literal:lit=' PRINT' idx=0 'print "B:";B%'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'print "B:";B%'
check_literalcheck_literal:After while(): "B:";B%
check_literalret1 Match. '' == ''
scan_printBefore while
check_expression' "B:";B%'
check_eitemcheck_eitem: '"B:";B%'
check_function '"B:";B%'
check_functionret0
check_atomcheck_atom:
check_atomcheck_atom:Checking for character constant
check_literalcheck_literal:lit=' %' idx=6 '"B:";B%'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=6 '"B:";B%'
check_literal  '%' != '"'
check_literalcheck_literal: ret0
check_atomcheck_atom:Checking for string
check_literalcheck_literal:lit=' "' idx=6 '"B:";B%'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=6 '"B:";B%'
check_literalcheck_literal:After while():B:";B%
check_literalret1 Match. '' == ''
check_atomret1
check_eitemret1
check_operator';B%' igncomma:1
check_operatorret0:is comma: 0
check_expressionret1 ';B%' commas:0
scan_printCheck expression ok, in while loop
scan_printScan expression
scan_expression' "B:";B%' igncomma:1
check_eitemcheck_eitem: '"B:";B%'
check_function '"B:";B%'
check_functionret0
check_atomcheck_atom:
check_atomcheck_atom:Checking for character constant
check_literalcheck_literal:lit=' %' idx=6 '"B:";B%'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=6 '"B:";B%'
check_literal  '%' != '"'
check_literalcheck_literal: ret0
check_atomcheck_atom:Checking for string
check_literalcheck_literal:lit=' "' idx=6 '"B:";B%'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=6 '"B:";B%'
check_literalcheck_literal:After while():B:";B%
check_literalret1 Match. '' == ''
check_atomret1
check_eitemret1
scan_eitemscan_eitem:
check_function '"B:";B%'
check_functionret0
check_atomcheck_atom:
check_atomcheck_atom:Checking for character constant
check_literalcheck_literal:lit=' %' idx=6 '"B:";B%'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=6 '"B:";B%'
check_literal  '%' != '"'
check_literalcheck_literal: ret0
check_atomcheck_atom:Checking for string
check_literalcheck_literal:lit=' "' idx=6 '"B:";B%'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=6 '"B:";B%'
check_literalcheck_literal:After while():B:";B%
check_literalret1 Match. '' == ''
check_atomret1
scan_atomscan_atom:
check_literalcheck_literal:lit=' %' idx=6 '"B:";B%'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=6 '"B:";B%'
check_literal  '%' != '"'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' "' idx=6 '"B:";B%'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=6 '"B:";B%'
check_literalcheck_literal:After while():B:";B%
check_literalret1 Match. '' == ''
scan_stringscan_string:
check_literalcheck_literal:lit=' "' idx=6 '"B:";B%'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=6 '"B:";B%'
check_literalcheck_literal:After while():B:";B%
check_literalret1 Match. '' == ''
scan_string  (in if) 'B:";B%'
scan_string  (in wh) 'B:";B%'
scan_string  (in wh) ':";B%'
scan_string  (in wh) ':";B%'
scan_string  (in wh) '";B%'
scan_stringscan_string: ret1
token_is_function
token_is_function:
token_is_function
token_is_function:"B:" is not function
token_is_function
token_is_function:
token_is_function
token_is_function:"B:" is not function
scan_atomret1
scan_expression';B%' Before while igncomma:1
check_operator';B%' igncomma:1
check_operatorret0:is comma: 268560071
scan_expressionret1 ';B%' commas:0
scan_printAfter scan expression I
check_literalcheck_literal:lit=' ,' idx=10 ';B%'
check_literaldropping space
check_literalcheck_literal:After drop space:',' idx=10 ';B%'
check_literal  ',' != ';'
check_literalcheck_literal: ret0
scan_printAfter scan expression II
check_literalcheck_literal:lit=' ;' idx=10 ';B%'
check_literaldropping space
check_literalcheck_literal:After drop space:';' idx=10 ';B%'
check_literalcheck_literal:After while():B%
check_literalret1 Match. '' == ''
scan_literal_corescan_literal_core:lit=' ;' ';B%'
scan_literal_corescan_literal_core:After drop space:';B%'
scan_literal_corescan_literal_core:while loop:;B%
token_is_function
token_is_function:
token_is_function
token_is_function:; is not function
token_is_function
token_is_function:
token_is_function
token_is_function:; is not function
scan_literalret1
scan_printChecking if delimiter was present
scan_printDelimiter present
scan_printSemi colon present
check_expression'B%'
check_eitemcheck_eitem: 'B%'
check_function 'B%'
check_functionret0
check_atomcheck_atom:
check_atomcheck_atom:Checking for character constant
check_literalcheck_literal:lit=' %' idx=11 'B%'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=11 'B%'
check_literal  '%' != 'B'
check_literalcheck_literal: ret0
check_atomcheck_atom:Checking for string
check_literalcheck_literal:lit=' "' idx=11 'B%'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=11 'B%'
check_literal  '"' != 'B'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
check_floatFltval:'' float:0.000000e+00
check_floatcheck_float: ret0
check_integercheck_integer: 'B%'
check_integercheck_integer:ret0
check_hexcheck_hex: 'B%'
check_hexcheck_hex:ret0 not '$'
check_numbercheck_number: ret0
check_proc_callcheck_proc_call:
check_textlabel'B%'
check_textlabel'B' is a text label chstr:'B'
check_textlabelExit char:%
check_textlabelcheck_textlabel:ret1 Name:'B%' Type:i
check_proc_call'B%' is text label
check_literalcheck_literal:lit=':' idx=13 ''
check_literalcheck_literal:After drop space:':' idx=13 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_variable'B%'
check_operator'B%' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'B%':
check_vnamecheck_vname ret1 '%':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=13 ''
check_literalcheck_literal:After drop space:'(' idx=13 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variablecheck_variable:ret1 
check_atomret1
check_eitemret1
check_operator'' igncomma:1
check_operatorret0:is comma: 0
check_expressionret1 '' commas:0
scan_printCheck expression ok, in while loop
scan_printScan expression
scan_expression'B%' igncomma:1
check_eitemcheck_eitem: 'B%'
check_function 'B%'
check_functionret0
check_atomcheck_atom:
check_atomcheck_atom:Checking for character constant
check_literalcheck_literal:lit=' %' idx=11 'B%'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=11 'B%'
check_literal  '%' != 'B'
check_literalcheck_literal: ret0
check_atomcheck_atom:Checking for string
check_literalcheck_literal:lit=' "' idx=11 'B%'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=11 'B%'
check_literal  '"' != 'B'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
check_floatFltval:'' float:0.000000e+00
check_floatcheck_float: ret0
check_integercheck_integer: 'B%'
check_integercheck_integer:ret0
check_hexcheck_hex: 'B%'
check_hexcheck_hex:ret0 not '$'
check_numbercheck_number: ret0
check_proc_callcheck_proc_call:
check_textlabel'B%'
check_textlabel'B' is a text label chstr:'B'
check_textlabelExit char:%
check_textlabelcheck_textlabel:ret1 Name:'B%' Type:i
check_proc_call'B%' is text label
check_literalcheck_literal:lit=':' idx=13 ''
check_literalcheck_literal:After drop space:':' idx=13 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_variable'B%'
check_operator'B%' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'B%':
check_vnamecheck_vname ret1 '%':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=13 ''
check_literalcheck_literal:After drop space:'(' idx=13 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variablecheck_variable:ret1 
check_atomret1
check_eitemret1
scan_eitemscan_eitem:
check_function 'B%'
check_functionret0
check_atomcheck_atom:
check_atomcheck_atom:Checking for character constant
check_literalcheck_literal:lit=' %' idx=11 'B%'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=11 'B%'
check_literal  '%' != 'B'
check_literalcheck_literal: ret0
check_atomcheck_atom:Checking for string
check_literalcheck_literal:lit=' "' idx=11 'B%'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=11 'B%'
check_literal  '"' != 'B'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
check_floatFltval:'' float:0.000000e+00
check_floatcheck_float: ret0
check_integercheck_integer: 'B%'
check_integercheck_integer:ret0
check_hexcheck_hex: 'B%'
check_hexcheck_hex:ret0 not '$'
check_numbercheck_number: ret0
check_proc_callcheck_proc_call:
check_textlabel'B%'
check_textlabel'B' is a text label chstr:'B'
check_textlabelExit char:%
check_textlabelcheck_textlabel:ret1 Name:'B%' Type:i
check_proc_call'B%' is text label
check_literalcheck_literal:lit=':' idx=13 ''
check_literalcheck_literal:After drop space:':' idx=13 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_variable'B%'
check_operator'B%' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'B%':
check_vnamecheck_vname ret1 '%':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=13 ''
check_literalcheck_literal:After drop space:'(' idx=13 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variablecheck_variable:ret1 
check_atomret1
scan_atomscan_atom:
check_literalcheck_literal:lit=' %' idx=11 'B%'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=11 'B%'
check_literal  '%' != 'B'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' "' idx=11 'B%'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=11 'B%'
check_literal  '"' != 'B'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
check_floatFltval:'' float:0.000000e+00
check_floatcheck_float: ret0
check_integercheck_integer: 'B%'
check_integercheck_integer:ret0
check_hexcheck_hex: 'B%'
check_hexcheck_hex:ret0 not '$'
check_numbercheck_number: ret0
check_proc_callcheck_proc_call:
check_textlabel'B%'
check_textlabel'B' is a text label chstr:'B'
check_textlabelExit char:%
check_textlabelcheck_textlabel:ret1 Name:'B%' Type:i
check_proc_call'B%' is text label
check_literalcheck_literal:lit=':' idx=13 ''
check_literalcheck_literal:After drop space:':' idx=13 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_variable'B%'
check_operator'B%' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'B%':
check_vnamecheck_vname ret1 '%':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=13 ''
check_literalcheck_literal:After drop space:'(' idx=13 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variablecheck_variable:ret1 
scan_variable'B%' ref_ndeclare:1
scan_vnamescan_vname: 'B%'
scan_vnamescan_vname: ret1 'B'
scan_variablescan_variable: '%' vname='B'
token_is_other_keyword
token_is_other_keyword'B%' is not other keyword
scan_variableArray test ''
check_literalcheck_literal:lit='(' idx=13 ''
check_literalcheck_literal:After drop space:'(' idx=13 ''
check_literalcheck_literal  ret0 Empty test string
scan_variablescan_variable:ret1 vname='B%' Integer
token_is_function
token_is_function:
token_is_function
token_is_function:B% is not function
token_is_function
token_is_function:
token_is_function
token_is_function:B% is not function
add_var_infoName:B% Idx:-1
add_var_infoAlready present
add_var_info  reference so OK
scan_variableret1
scan_atomret1
scan_expression'' Before while igncomma:1
check_operator'' igncomma:1
check_operatorret0:is comma: 268560071
scan_expressionret1 '' commas:0
scan_printAfter scan expression I
check_literalcheck_literal:lit=' ,' idx=13 ''
check_literaldropping space
check_literalcheck_literal:After drop space:',' idx=13 ''
check_literalcheck_literal  ret0 Empty test string
scan_printAfter scan expression II
check_literalcheck_literal:lit=' ;' idx=13 ''
check_literaldropping space
check_literalcheck_literal:After drop space:';' idx=13 ''
check_literalcheck_literal  ret0 Empty test string
scan_printChecking if delimiter was present
scan_printNo delimiter present
check_expression''
check_eitemcheck_eitem: ''
check_function ''
check_functionret0
check_atomcheck_atom:
check_atomcheck_atom:Checking for character constant
check_literalcheck_literal:lit=' %' idx=13 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=13 ''
check_literalcheck_literal  ret0 Empty test string
check_atomcheck_atom:Checking for string
check_literalcheck_literal:lit=' "' idx=13 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=13 ''
check_literalcheck_literal  ret0 Empty test string
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
check_floatFltval:'' float:0.000000e+00
check_floatcheck_float: ret0
check_integercheck_integer: ''
check_integercheck_integer:ret0
check_hexcheck_hex: ''
check_hexcheck_hex:ret0 not '$'
check_numbercheck_number: ret0
check_proc_callcheck_proc_call:
check_textlabel''
check_textlabel'' is a text label chstr:'L'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'' Type:f
check_proc_call'' is text label
check_literalcheck_literal:lit=':' idx=13 ''
check_literalcheck_literal:After drop space:':' idx=13 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_variable''
check_operator'' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname '':
check_vnamecheck_vname ret0 '':
check_variablecheck_variable:ret0 
check_atomcheck_atom:ret0
check_sub_exprcheck_sub_expr:
check_literalcheck_literal:lit=' (' idx=13 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'(' idx=13 ''
check_literalcheck_literal  ret0 Empty test string
check_sub_exprret0: No '('
check_addr_namecheck_addr_name: ''
check_vnamecheck_vname '':
check_vnamecheck_vname ret0 '':
check_addr_namecheck_addr_name: ret0
check_eitemcheck_eitem:ret0
check_operator'' igncomma:1
check_operatorret0:is comma: 0
check_expressionret0 ''
scan_printCheck for trailing delimiter
check_literalcheck_literal:lit=' ;' idx=13 ''
check_literaldropping space
check_literalcheck_literal:After drop space:';' idx=13 ''
check_literalcheck_literal  ret0 Empty test string
check_literalcheck_literal:lit=' ,' idx=13 ''
check_literaldropping space
check_literalcheck_literal:After drop space:',' idx=13 ''
check_literalcheck_literal  ret0 Empty test string
scan_printscan_print:ret1 Expression 
scan_lineret1 print
check_literalcheck_literal:lit=' :' idx=13 ''
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=13 ''
check_literalcheck_literal  ret0 Empty test string
scan_line:FFFFFF0E

scan_line:''cline:''
pull_next_line:FFFFFE38

pull_next_line:''
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=13 ''
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=13 ''
check_literalcheck_literal  ret0 Empty test string
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=13 strlen:0 
pull_next_lineReading line
pull_next_line------------------------------
is_all_spacesIs all spaces
pull_next_lineLine was all spaces
pull_next_lineReading line
pull_next_line------------------------------
is_all_spacesIs all spaces
pull_next_lineLine was all spaces
pull_next_lineReading line
pull_next_line------------------------------
is_all_spacescline[0] = 'R' (82)
is_all_spacescline[1] = '%' (37)
is_all_spacescline[2] = ' ' (32)
is_all_spacescline[3] = '=' (61)
is_all_spacescline[4] = ' ' (32)
is_all_spacescline[5] = '0' (48)
is_all_spacesIs not all spaces
pull_next_lineGot a line: 'R% = 0'
pull_next_lineret1
check_literalcheck_literal:lit='REM' idx=0 'R% = 0'
check_literalcheck_literal:After drop space:'REM' idx=0 'R% = 0'
check_literal  'E' != '%'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'R% = 0'
check_literalcheck_literal:After drop space:'REM&' idx=0 'R% = 0'
check_literal  'E' != '%'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'R% = 0'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'R% = 0'
check_literal  'E' != '%'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'R% = 0'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'R% = 0'
check_literal  'E' != '%'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'R% = 0'
check_operator'R% = 0' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'R% = 0':
check_vnamecheck_vname ret1 '% = 0':
check_variableName: ''
check_variablecheck_variable: Ary test ' = 0'
check_literalcheck_literal:lit='(' idx=2 ' = 0'
check_literalcheck_literal:After drop space:'(' idx=2 ' = 0'
check_literal  '(' != ' '
check_literalcheck_literal: ret0
check_variablecheck_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=2 ' = 0'
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=3 '= 0'
check_literalcheck_literal:After while(): 0
check_literalret1 Match. '' == ''
check_expression' 0'
check_eitemcheck_eitem: '0'
check_function '0'
check_functionret0
check_atomcheck_atom:
check_atomcheck_atom:Checking for character constant
check_literalcheck_literal:lit=' %' idx=5 '0'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=5 '0'
check_literal  '%' != '0'
check_literalcheck_literal: ret0
check_atomcheck_atom:Checking for string
check_literalcheck_literal:lit=' "' idx=5 '0'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=5 '0'
check_literal  '"' != '0'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
check_floatFltval:'0' float:0.000000e+00
check_floatcheck_float: ret0
check_integercheck_integer: '0'
check_integerret1
check_numbercheck_number: ret1
check_atomret1
check_eitemret1
check_operator'' igncomma:0
check_operatorret0:is comma: 0
check_expressionret1 '' commas:0
check_assignmentret1
scan_assignmentscan_assignment:
scan_variable'R% = 0' ref_ndeclare:1
scan_vnamescan_vname: 'R% = 0'
scan_vnamescan_vname: ret1 'R'
scan_variablescan_variable: '% = 0' vname='R'
token_is_other_keyword
token_is_other_keyword'R%' is not other keyword
scan_variableArray test ' = 0'
check_literalcheck_literal:lit='(' idx=2 ' = 0'
check_literalcheck_literal:After drop space:'(' idx=2 ' = 0'
check_literal  '(' != ' '
check_literalcheck_literal: ret0
scan_variablescan_variable:ret1 vname='R%' Integer
token_is_function
token_is_function:
token_is_function
token_is_function:R% is not function
token_is_function
token_is_function:
token_is_function
token_is_function:R% is not function
add_var_infoName:R% Idx:-1
add_var_infoAlready present
add_var_info  reference so OK
scan_variableret1
scan_assignment_equalsscan_assignment_equals:lit=' =' ' = 0'
scan_assignment_equalsscan_assignment_equals:After drop space:'= 0'
scan_assignment_equalsscan_assignment_equals:while loop:= 0
scan_assignment_equalsret1
scan_expression' 0' igncomma:0
check_eitemcheck_eitem: '0'
check_function '0'
check_functionret0
check_atomcheck_atom:
check_atomcheck_atom:Checking for character constant
check_literalcheck_literal:lit=' %' idx=5 '0'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=5 '0'
check_literal  '%' != '0'
check_literalcheck_literal: ret0
check_atomcheck_atom:Checking for string
check_literalcheck_literal:lit=' "' idx=5 '0'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=5 '0'
check_literal  '"' != '0'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
check_floatFltval:'0' float:0.000000e+00
check_floatcheck_float: ret0
check_integercheck_integer: '0'
check_integerret1
check_numbercheck_number: ret1
check_atomret1
check_eitemret1
scan_eitemscan_eitem:
check_function '0'
check_functionret0
check_atomcheck_atom:
check_atomcheck_atom:Checking for character constant
check_literalcheck_literal:lit=' %' idx=5 '0'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=5 '0'
check_literal  '%' != '0'
check_literalcheck_literal: ret0
check_atomcheck_atom:Checking for string
check_literalcheck_literal:lit=' "' idx=5 '0'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=5 '0'
check_literal  '"' != '0'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
check_floatFltval:'0' float:0.000000e+00
check_floatcheck_float: ret0
check_integercheck_integer: '0'
check_integerret1
check_numbercheck_number: ret1
check_atomret1
scan_atomscan_atom:
check_literalcheck_literal:lit=' %' idx=5 '0'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=5 '0'
check_literal  '%' != '0'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' "' idx=5 '0'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=5 '0'
check_literal  '"' != '0'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
check_floatFltval:'0' float:0.000000e+00
check_floatcheck_float: ret0
check_integercheck_integer: '0'
check_integerret1
check_numbercheck_number: ret1
scan_numberscan_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
check_floatFltval:'0' float:0.000000e+00
check_floatcheck_float: ret0
check_integercheck_integer: '0'
check_integerret1
scan_integer'0'
scan_integerret1
scan_integerret1  num_dig:1 intval='0'
scan_atomret1
scan_expression'' Before while igncomma:0
check_operator'' igncomma:0
check_operatorret0:is comma: 16777222
scan_expressionret1 '' commas:0
add_var_infoName:R% Idx:-1
add_var_infoAlready present
add_var_info  reference so OK
scan_assignmentscan_assignment: ret1
scan_lineret1
check_literalcheck_literal:lit=' :' idx=6 ''
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=6 ''
check_literalcheck_literal  ret0 Empty test string
scan_line:FFFFFF0E

scan_line:''cline:''
pull_next_line:FFFFFE38

pull_next_line:''
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=6 ''
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=6 ''
check_literalcheck_literal  ret0 Empty test string
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=6 strlen:0 
pull_next_lineReading line
pull_next_line------------------------------
is_all_spacesIs all spaces
pull_next_lineLine was all spaces
pull_next_lineReading line
pull_next_line------------------------------
is_all_spacesIs all spaces
pull_next_lineLine was all spaces
pull_next_lineReading line
pull_next_line------------------------------
is_all_spacesIs all spaces
pull_next_lineLine was all spaces
pull_next_lineReading line
pull_next_line------------------------------
is_all_spacesIs all spaces
pull_next_lineLine was all spaces
pull_next_lineReading line
pull_next_line------------------------------
is_all_spacescline[0] = 'I' (73)
is_all_spacescline[1] = 'F' (70)
is_all_spacescline[2] = ' ' (32)
is_all_spacescline[3] = 'A' (65)
is_all_spacescline[4] = '%' (37)
is_all_spacescline[5] = ' ' (32)
is_all_spacescline[6] = '=' (61)
is_all_spacescline[7] = ' ' (32)
is_all_spacescline[8] = 'B' (66)
is_all_spacescline[9] = '%' (37)
is_all_spacesIs not all spaces
pull_next_lineGot a line: 'IF A% = B%'
pull_next_lineret1
check_literalcheck_literal:lit='REM' idx=0 'IF A% = B%'
check_literalcheck_literal:After drop space:'REM' idx=0 'IF A% = B%'
check_literal  'R' != 'I'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'IF A% = B%'
check_literalcheck_literal:After drop space:'REM&' idx=0 'IF A% = B%'
check_literal  'R' != 'I'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'IF A% = B%'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'IF A% = B%'
check_literal  'R' != 'I'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'IF A% = B%'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'IF A% = B%'
check_literal  'R' != 'I'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'IF A% = B%'
check_operator'IF A% = B%' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'IF A% = B%':
check_vnamecheck_vname ret1 ' A% = B%':
check_variableName: ''
check_variablecheck_variable: Ary test ' A% = B%'
check_literalcheck_literal:lit='(' idx=2 ' A% = B%'
check_literalcheck_literal:After drop space:'(' idx=2 ' A% = B%'
check_literal  '(' != ' '
check_literalcheck_literal: ret0
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=2 ' A% = B%'
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=3 'A% = B%'
check_literal  '=' != 'A'
check_literalcheck_literal: ret0
check_assignmentcheck_assignment:ret0
check_declare'IF A% = B%'
check_literalcheck_literal:lit=' LOCAL' idx=0 'IF A% = B%'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'IF A% = B%'
check_literal  'L' != 'I'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'IF A% = B%'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'IF A% = B%'
check_literal  'G' != 'I'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'IF A% = B%'
check_textlabel'IF' is a text label chstr:'F'
check_textlabelExit char: 
check_textlabelcheck_textlabel:ret1 Name:'IF' Type:f
check_literalcheck_literal:lit='::' idx=2 ' A% = B%'
check_literalcheck_literal:After drop space:'::' idx=2 ' A% = B%'
check_literal  ':' != ' '
check_literalcheck_literal: ret0
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'IF A% = B%'
check_textlabel'IF' is a text label chstr:'F'
check_textlabelExit char: 
check_textlabelcheck_textlabel:ret1 Name:'IF' Type:f
check_proc_call'IF' is text label
check_literalcheck_literal:lit=':' idx=2 ' A% = B%'
check_literalcheck_literal:After drop space:':' idx=2 ' A% = B%'
check_literal  ':' != ' '
check_literalcheck_literal: ret0
check_proc_callcheck_proc_call:ret0
check_input'IF A% = B%'
check_literalcheck_literal:lit=' INPUT' idx=0 'IF A% = B%'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'IF A% = B%'
check_literal  'N' != 'F'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'IF A% = B%'
check_literalcheck_literal:lit=' PRINT' idx=0 'IF A% = B%'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'IF A% = B%'
check_literal  'P' != 'I'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'IF A% = B%'
check_literalcheck_literal:lit=' LPRINT' idx=0 'IF A% = B%'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'IF A% = B%'
check_literal  'L' != 'I'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'IF A% = B%'
check_literalcheck_literal:lit=' RETURN' idx=0 'IF A% = B%'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'IF A% = B%'
check_literal  'R' != 'I'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'IF A% = B%'
check_literalcheck_literal:lit=' USE' idx=0 'IF A% = B%'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'IF A% = B%'
check_literal  'U' != 'I'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'IF A% = B%'
check_literalcheck_literal:lit=' ONERR' idx=0 'IF A% = B%'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'IF A% = B%'
check_literal  'O' != 'I'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'IF A% = B%'
check_literalcheck_literal:lit=' IF' idx=0 'IF A% = B%'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'IF A% = B%'
check_literalcheck_literal:After while(): A% = B%
check_literalret1 Match. '' == ''
check_ifret1
scan_linescan_line:check_if: 
scan_ifEntry 'IF A% = B%'
check_literalcheck_literal:lit=' IF' idx=0 'IF A% = B%'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'IF A% = B%'
check_literalcheck_literal:After while(): A% = B%
check_literalret1 Match. '' == ''
scan_expression' A% = B%' igncomma:1
check_eitemcheck_eitem: 'A% = B%'
check_function 'A% = B%'
check_functionret0
check_atomcheck_atom:
check_atomcheck_atom:Checking for character constant
check_literalcheck_literal:lit=' %' idx=3 'A% = B%'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=3 'A% = B%'
check_literal  '%' != 'A'
check_literalcheck_literal: ret0
check_atomcheck_atom:Checking for string
check_literalcheck_literal:lit=' "' idx=3 'A% = B%'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=3 'A% = B%'
check_literal  '"' != 'A'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
check_floatFltval:'' float:0.000000e+00
check_floatcheck_float: ret0
check_integercheck_integer: 'A% = B%'
check_integercheck_integer:ret0
check_hexcheck_hex: 'A% = B%'
check_hexcheck_hex:ret0 not '$'
check_numbercheck_number: ret0
check_proc_callcheck_proc_call:
check_textlabel'A% = B%'
check_textlabel'A' is a text label chstr:'A'
check_textlabelExit char:%
check_textlabelcheck_textlabel:ret1 Name:'A%' Type:i
check_proc_call'A%' is text label
check_literalcheck_literal:lit=':' idx=5 ' = B%'
check_literalcheck_literal:After drop space:':' idx=5 ' = B%'
check_literal  ':' != ' '
check_literalcheck_literal: ret0
check_proc_callcheck_proc_call:ret0
check_variable'A% = B%'
check_operator'A% = B%' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'A% = B%':
check_vnamecheck_vname ret1 '% = B%':
check_variableName: ''
check_variablecheck_variable: Ary test ' = B%'
check_literalcheck_literal:lit='(' idx=5 ' = B%'
check_literalcheck_literal:After drop space:'(' idx=5 ' = B%'
check_literal  '(' != ' '
check_literalcheck_literal: ret0
check_variablecheck_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variablecheck_variable:ret1 
check_atomret1
check_eitemret1
scan_eitemscan_eitem:
check_function 'A% = B%'
check_functionret0
check_atomcheck_atom:
check_atomcheck_atom:Checking for character constant
check_literalcheck_literal:lit=' %' idx=3 'A% = B%'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=3 'A% = B%'
check_literal  '%' != 'A'
check_literalcheck_literal: ret0
check_atomcheck_atom:Checking for string
check_literalcheck_literal:lit=' "' idx=3 'A% = B%'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=3 'A% = B%'
check_literal  '"' != 'A'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
check_floatFltval:'' float:0.000000e+00
check_floatcheck_float: ret0
check_integercheck_integer: 'A% = B%'
check_integercheck_integer:ret0
check_hexcheck_hex: 'A% = B%'
check_hexcheck_hex:ret0 not '$'
check_numbercheck_number: ret0
check_proc_callcheck_proc_call:
check_textlabel'A% = B%'
check_textlabel'A' is a text label chstr:'A'
check_textlabelExit char:%
check_textlabelcheck_textlabel:ret1 Name:'A%' Type:i
check_proc_call'A%' is text label
check_literalcheck_literal:lit=':' idx=5 ' = B%'
check_literalcheck_literal:After drop space:':' idx=5 ' = B%'
check_literal  ':' != ' '
check_literalcheck_literal: ret0
check_proc_callcheck_proc_call:ret0
check_variable'A% = B%'
check_operator'A% = B%' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'A% = B%':
check_vnamecheck_vname ret1 '% = B%':
check_variableName: ''
check_variablecheck_variable: Ary test ' = B%'
check_literalcheck_literal:lit='(' idx=5 ' = B%'
check_literalcheck_literal:After drop space:'(' idx=5 ' = B%'
check_literal  '(' != ' '
check_literalcheck_literal: ret0
check_variablecheck_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variablecheck_variable:ret1 
check_atomret1
scan_atomscan_atom:
check_literalcheck_literal:lit=' %' idx=3 'A% = B%'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=3 'A% = B%'
check_literal  '%' != 'A'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' "' idx=3 'A% = B%'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=3 'A% = B%'
check_literal  '"' != 'A'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
check_floatFltval:'' float:0.000000e+00
check_floatcheck_float: ret0
check_integercheck_integer: 'A% = B%'
check_integercheck_integer:ret0
check_hexcheck_hex: 'A% = B%'
check_hexcheck_hex:ret0 not '$'
check_numbercheck_number: ret0
check_proc_callcheck_proc_call:
check_textlabel'A% = B%'
check_textlabel'A' is a text label chstr:'A'
check_textlabelExit char:%
check_textlabelcheck_textlabel:ret1 Name:'A%' Type:i
check_proc_call'A%' is text label
check_literalcheck_literal:lit=':' idx=5 ' = B%'
check_literalcheck_literal:After drop space:':' idx=5 ' = B%'
check_literal  ':' != ' '
check_literalcheck_literal: ret0
check_proc_callcheck_proc_call:ret0
check_variable'A% = B%'
check_operator'A% = B%' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'A% = B%':
check_vnamecheck_vname ret1 '% = B%':
check_variableName: ''
check_variablecheck_variable: Ary test ' = B%'
check_literalcheck_literal:lit='(' idx=5 ' = B%'
check_literalcheck_literal:After drop space:'(' idx=5 ' = B%'
check_literal  '(' != ' '
check_literalcheck_literal: ret0
check_variablecheck_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variablecheck_variable:ret1 
scan_variable'A% = B%' ref_ndeclare:1
scan_vnamescan_vname: 'A% = B%'
scan_vnamescan_vname: ret1 'A'
scan_variablescan_variable: '% = B%' vname='A'
token_is_other_keyword
token_is_other_keyword'A%' is not other keyword
scan_variableArray test ' = B%'
check_literalcheck_literal:lit='(' idx=5 ' = B%'
check_literalcheck_literal:After drop space:'(' idx=5 ' = B%'
check_literal  '(' != ' '
check_literalcheck_literal: ret0
scan_variablescan_variable:ret1 vname='A%' Integer
token_is_function
token_is_function:
token_is_function
token_is_function:A% is not function
token_is_function
token_is_function:
token_is_function
token_is_function:A% is not function
add_var_infoName:A% Idx:-1
add_var_infoAlready present
add_var_info  reference so OK
scan_variableret1
scan_atomret1
scan_expression' = B%' Before while igncomma:1
check_operator'= B%' igncomma:1
check_operatorret1:is comma: 0
check_operator'= B%' igncomma:1
check_operatorret1:is comma: 0
scan_operatorscan_operator: ' = B%'
scan_operatorscan_operator: ret1 ' B%' nb:0
check_operator'B%' igncomma:1
check_operatorret0:is comma: 0
scan_expression'B%' Before scan_eitem igncomma:1
scan_eitemscan_eitem:
check_function 'B%'
check_functionret0
check_atomcheck_atom:
check_atomcheck_atom:Checking for character constant
check_literalcheck_literal:lit=' %' idx=7 ' B%'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=8 'B%'
check_literal  '%' != 'B'
check_literalcheck_literal: ret0
check_atomcheck_atom:Checking for string
check_literalcheck_literal:lit=' "' idx=7 ' B%'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=8 'B%'
check_literal  '"' != 'B'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
check_floatFltval:'' float:0.000000e+00
check_floatcheck_float: ret0
check_integercheck_integer: 'B%'
check_integercheck_integer:ret0
check_hexcheck_hex: 'B%'
check_hexcheck_hex:ret0 not '$'
check_numbercheck_number: ret0
check_proc_callcheck_proc_call:
check_textlabel'B%'
check_textlabel'B' is a text label chstr:'B'
check_textlabelExit char:%
check_textlabelcheck_textlabel:ret1 Name:'B%' Type:i
check_proc_call'B%' is text label
check_literalcheck_literal:lit=':' idx=10 ''
check_literalcheck_literal:After drop space:':' idx=10 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_variable'B%'
check_operator'B%' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'B%':
check_vnamecheck_vname ret1 '%':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=10 ''
check_literalcheck_literal:After drop space:'(' idx=10 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variablecheck_variable:ret1 
check_atomret1
scan_atomscan_atom:
check_literalcheck_literal:lit=' %' idx=7 ' B%'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=8 'B%'
check_literal  '%' != 'B'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' "' idx=7 ' B%'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=8 'B%'
check_literal  '"' != 'B'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
check_floatFltval:'' float:0.000000e+00
check_floatcheck_float: ret0
check_integercheck_integer: 'B%'
check_integercheck_integer:ret0
check_hexcheck_hex: 'B%'
check_hexcheck_hex:ret0 not '$'
check_numbercheck_number: ret0
check_proc_callcheck_proc_call:
check_textlabel'B%'
check_textlabel'B' is a text label chstr:'B'
check_textlabelExit char:%
check_textlabelcheck_textlabel:ret1 Name:'B%' Type:i
check_proc_call'B%' is text label
check_literalcheck_literal:lit=':' idx=10 ''
check_literalcheck_literal:After drop space:':' idx=10 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_variable'B%'
check_operator'B%' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'B%':
check_vnamecheck_vname ret1 '%':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=10 ''
check_literalcheck_literal:After drop space:'(' idx=10 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variablecheck_variable:ret1 
scan_variable' B%' ref_ndeclare:1
scan_vnamescan_vname: ' B%'
scan_vnamescan_vname: ret1 'B'
scan_variablescan_variable: '%' vname='B'
token_is_other_keyword
token_is_other_keyword'B%' is not other keyword
scan_variableArray test ''
check_literalcheck_literal:lit='(' idx=10 ''
check_literalcheck_literal:After drop space:'(' idx=10 ''
check_literalcheck_literal  ret0 Empty test string
scan_variablescan_variable:ret1 vname='B%' Integer
token_is_function
token_is_function:
token_is_function
token_is_function:B% is not function
token_is_function
token_is_function:
token_is_function
token_is_function:B% is not function
add_var_infoName:B% Idx:-1
add_var_infoAlready present
add_var_info  reference so OK
scan_variableret1
scan_atomret1
scan_expressionn commas now:0
check_literalcheck_literal:lit=' %' idx=10 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=10 ''
check_literalcheck_literal  ret0 Empty test string
check_operator'' igncomma:1
check_operatorret0:is comma: 0
scan_expressionret1 '' commas:0
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=10 ''
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=10 ''
check_literalcheck_literal  ret0 Empty test string
drop_colonExit
scan_line:FFFFFD6A

scan_line:''cline:''
pull_next_line:FFFFFC94

pull_next_line:''
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=10 ''
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=10 ''
check_literalcheck_literal  ret0 Empty test string
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=10 strlen:0 
pull_next_lineReading line
pull_next_line------------------------------
is_all_spacescline[0] = 'R' (82)
is_all_spacescline[1] = '%' (37)
is_all_spacescline[2] = ' ' (32)
is_all_spacescline[3] = '=' (61)
is_all_spacescline[4] = ' ' (32)
is_all_spacescline[5] = 'R' (82)
is_all_spacescline[6] = '%' (37)
is_all_spacescline[7] = ' ' (32)
is_all_spacescline[8] = '+' (43)
is_all_spacescline[9] = ' ' (32)
is_all_spacescline[10] = '1' (49)
is_all_spacesIs not all spaces
pull_next_lineGot a line: 'R% = R% + 1'
pull_next_lineret1
check_literalcheck_literal:lit='REM' idx=0 'R% = R% + 1'
check_literalcheck_literal:After drop space:'REM' idx=0 'R% = R% + 1'
check_literal  'E' != '%'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'R% = R% + 1'
check_literalcheck_literal:After drop space:'REM&' idx=0 'R% = R% + 1'
check_literal  'E' != '%'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'R% = R% + 1'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'R% = R% + 1'
check_literal  'E' != '%'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'R% = R% + 1'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'R% = R% + 1'
check_literal  'E' != '%'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'R% = R% + 1'
check_operator'R% = R% + 1' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'R% = R% + 1':
check_vnamecheck_vname ret1 '% = R% + 1':
check_variableName: ''
check_variablecheck_variable: Ary test ' = R% + 1'
check_literalcheck_literal:lit='(' idx=2 ' = R% + 1'
check_literalcheck_literal:After drop space:'(' idx=2 ' = R% + 1'
check_literal  '(' != ' '
check_literalcheck_literal: ret0
check_variablecheck_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=2 ' = R% + 1'
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=3 '= R% + 1'
check_literalcheck_literal:After while(): R% + 1
check_literalret1 Match. '' == ''
check_expression' R% + 1'
check_eitemcheck_eitem: 'R% + 1'
check_function 'R% + 1'
check_functionret0
check_atomcheck_atom:
check_atomcheck_atom:Checking for character constant
check_literalcheck_literal:lit=' %' idx=5 'R% + 1'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=5 'R% + 1'
check_literal  '%' != 'R'
check_literalcheck_literal: ret0
check_atomcheck_atom:Checking for string
check_literalcheck_literal:lit=' "' idx=5 'R% + 1'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=5 'R% + 1'
check_literal  '"' != 'R'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
check_floatFltval:'' float:0.000000e+00
check_floatcheck_float: ret0
check_integercheck_integer: 'R% + 1'
check_integercheck_integer:ret0
check_hexcheck_hex: 'R% + 1'
check_hexcheck_hex:ret0 not '$'
check_numbercheck_number: ret0
check_proc_callcheck_proc_call:
check_textlabel'R% + 1'
check_textlabel'R' is a text label chstr:'R'
check_textlabelExit char:%
check_textlabelcheck_textlabel:ret1 Name:'R%' Type:i
check_proc_call'R%' is text label
check_literalcheck_literal:lit=':' idx=7 ' + 1'
check_literalcheck_literal:After drop space:':' idx=7 ' + 1'
check_literal  ':' != ' '
check_literalcheck_literal: ret0
check_proc_callcheck_proc_call:ret0
check_variable'R% + 1'
check_operator'R% + 1' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'R% + 1':
check_vnamecheck_vname ret1 '% + 1':
check_variableName: ''
check_variablecheck_variable: Ary test ' + 1'
check_literalcheck_literal:lit='(' idx=7 ' + 1'
check_literalcheck_literal:After drop space:'(' idx=7 ' + 1'
check_literal  '(' != ' '
check_literalcheck_literal: ret0
check_variablecheck_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variablecheck_variable:ret1 
check_atomret1
check_eitemret1
check_operator'+ 1' igncomma:0
check_operatorret1:is comma: 0
check_operator'1' igncomma:0
check_operatorret0:is comma: 0
check_eitemcheck_eitem: '1'
check_function '1'
check_functionret0
check_atomcheck_atom:
check_atomcheck_atom:Checking for character constant
check_literalcheck_literal:lit=' %' idx=10 '1'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=10 '1'
check_literal  '%' != '1'
check_literalcheck_literal: ret0
check_atomcheck_atom:Checking for string
check_literalcheck_literal:lit=' "' idx=10 '1'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=10 '1'
check_literal  '"' != '1'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
check_floatFltval:'1' float:1.000000e+00
check_floatcheck_float: ret0
check_integercheck_integer: '1'
check_integerret1
check_numbercheck_number: ret1
check_atomret1
check_eitemret1
check_expressionn commas now:0
check_literalcheck_literal:lit=' %' idx=11 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=11 ''
check_literalcheck_literal  ret0 Empty test string
check_operator'' igncomma:0
check_operatorret0:is comma: 0
check_expressionret1 '' commas:0
check_assignmentret1
scan_assignmentscan_assignment:
scan_variable'R% = R% + 1' ref_ndeclare:1
scan_vnamescan_vname: 'R% = R% + 1'
scan_vnamescan_vname: ret1 'R'
scan_variablescan_variable: '% = R% + 1' vname='R'
token_is_other_keyword
token_is_other_keyword'R%' is not other keyword
scan_variableArray test ' = R% + 1'
check_literalcheck_literal:lit='(' idx=2 ' = R% + 1'
check_literalcheck_literal:After drop space:'(' idx=2 ' = R% + 1'
check_literal  '(' != ' '
check_literalcheck_literal: ret0
scan_variablescan_variable:ret1 vname='R%' Integer
token_is_function
token_is_function:
token_is_function
token_is_function:R% is not function
token_is_function
token_is_function:
token_is_function
token_is_function:R% is not function
add_var_infoName:R% Idx:-1
add_var_infoAlready present
add_var_info  reference so OK
scan_variableret1
scan_assignment_equalsscan_assignment_equals:lit=' =' ' = R% + 1'
scan_assignment_equalsscan_assignment_equals:After drop space:'= R% + 1'
scan_assignment_equalsscan_assignment_equals:while loop:= R% + 1
scan_assignment_equalsret1
scan_expression' R% + 1' igncomma:0
check_eitemcheck_eitem: 'R% + 1'
check_function 'R% + 1'
check_functionret0
check_atomcheck_atom:
check_atomcheck_atom:Checking for character constant
check_literalcheck_literal:lit=' %' idx=5 'R% + 1'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=5 'R% + 1'
check_literal  '%' != 'R'
check_literalcheck_literal: ret0
check_atomcheck_atom:Checking for string
check_literalcheck_literal:lit=' "' idx=5 'R% + 1'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=5 'R% + 1'
check_literal  '"' != 'R'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
check_floatFltval:'' float:0.000000e+00
check_floatcheck_float: ret0
check_integercheck_integer: 'R% + 1'
check_integercheck_integer:ret0
check_hexcheck_hex: 'R% + 1'
check_hexcheck_hex:ret0 not '$'
check_numbercheck_number: ret0
check_proc_callcheck_proc_call:
check_textlabel'R% + 1'
check_textlabel'R' is a text label chstr:'R'
check_textlabelExit char:%
check_textlabelcheck_textlabel:ret1 Name:'R%' Type:i
check_proc_call'R%' is text label
check_literalcheck_literal:lit=':' idx=7 ' + 1'
check_literalcheck_literal:After drop space:':' idx=7 ' + 1'
check_literal  ':' != ' '
check_literalcheck_literal: ret0
check_proc_callcheck_proc_call:ret0
check_variable'R% + 1'
check_operator'R% + 1' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'R% + 1':
check_vnamecheck_vname ret1 '% + 1':
check_variableName: ''
check_variablecheck_variable: Ary test ' + 1'
check_literalcheck_literal:lit='(' idx=7 ' + 1'
check_literalcheck_literal:After drop space:'(' idx=7 ' + 1'
check_literal  '(' != ' '
check_literalcheck_literal: ret0
check_variablecheck_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variablecheck_variable:ret1 
check_atomret1
check_eitemret1
scan_eitemscan_eitem:
check_function 'R% + 1'
check_functionret0
check_atomcheck_atom:
check_atomcheck_atom:Checking for character constant
check_literalcheck_literal:lit=' %' idx=5 'R% + 1'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=5 'R% + 1'
check_literal  '%' != 'R'
check_literalcheck_literal: ret0
check_atomcheck_atom:Checking for string
check_literalcheck_literal:lit=' "' idx=5 'R% + 1'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=5 'R% + 1'
check_literal  '"' != 'R'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
check_floatFltval:'' float:0.000000e+00
check_floatcheck_float: ret0
check_integercheck_integer: 'R% + 1'
check_integercheck_integer:ret0
check_hexcheck_hex: 'R% + 1'
check_hexcheck_hex:ret0 not '$'
check_numbercheck_number: ret0
check_proc_callcheck_proc_call:
check_textlabel'R% + 1'
check_textlabel'R' is a text label chstr:'R'
check_textlabelExit char:%
check_textlabelcheck_textlabel:ret1 Name:'R%' Type:i
check_proc_call'R%' is text label
check_literalcheck_literal:lit=':' idx=7 ' + 1'
check_literalcheck_literal:After drop space:':' idx=7 ' + 1'
check_literal  ':' != ' '
check_literalcheck_literal: ret0
check_proc_callcheck_proc_call:ret0
check_variable'R% + 1'
check_operator'R% + 1' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'R% + 1':
check_vnamecheck_vname ret1 '% + 1':
check_variableName: ''
check_variablecheck_variable: Ary test ' + 1'
check_literalcheck_literal:lit='(' idx=7 ' + 1'
check_literalcheck_literal:After drop space:'(' idx=7 ' + 1'
check_literal  '(' != ' '
check_literalcheck_literal: ret0
check_variablecheck_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variablecheck_variable:ret1 
check_atomret1
scan_atomscan_atom:
check_literalcheck_literal:lit=' %' idx=5 'R% + 1'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=5 'R% + 1'
check_literal  '%' != 'R'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' "' idx=5 'R% + 1'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=5 'R% + 1'
check_literal  '"' != 'R'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
check_floatFltval:'' float:0.000000e+00
check_floatcheck_float: ret0
check_integercheck_integer: 'R% + 1'
check_integercheck_integer:ret0
check_hexcheck_hex: 'R% + 1'
check_hexcheck_hex:ret0 not '$'
check_numbercheck_number: ret0
check_proc_callcheck_proc_call:
check_textlabel'R% + 1'
check_textlabel'R' is a text label chstr:'R'
check_textlabelExit char:%
check_textlabelcheck_textlabel:ret1 Name:'R%' Type:i
check_proc_call'R%' is text label
check_literalcheck_literal:lit=':' idx=7 ' + 1'
check_literalcheck_literal:After drop space:':' idx=7 ' + 1'
check_literal  ':' != ' '
check_literalcheck_literal: ret0
check_proc_callcheck_proc_call:ret0
check_variable'R% + 1'
check_operator'R% + 1' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'R% + 1':
check_vnamecheck_vname ret1 '% + 1':
check_variableName: ''
check_variablecheck_variable: Ary test ' + 1'
check_literalcheck_literal:lit='(' idx=7 ' + 1'
check_literalcheck_literal:After drop space:'(' idx=7 ' + 1'
check_literal  '(' != ' '
check_literalcheck_literal: ret0
check_variablecheck_variable:ret1 vname='%' is str:0 int:1 flt:0 ary:0
check_variablecheck_variable:ret1 
scan_variable'R% + 1' ref_ndeclare:1
scan_vnamescan_vname: 'R% + 1'
scan_vnamescan_vname: ret1 'R'
scan_variablescan_variable: '% + 1' vname='R'
token_is_other_keyword
token_is_other_keyword'R%' is not other keyword
scan_variableArray test ' + 1'
check_literalcheck_literal:lit='(' idx=7 ' + 1'
check_literalcheck_literal:After drop space:'(' idx=7 ' + 1'
check_literal  '(' != ' '
check_literalcheck_literal: ret0
scan_variablescan_variable:ret1 vname='R%' Integer
token_is_function
token_is_function:
token_is_function
token_is_function:R% is not function
token_is_function
token_is_function:
token_is_function
token_is_function:R% is not function
add_var_infoName:R% Idx:-1
add_var_infoAlready present
add_var_info  reference so OK
scan_variableret1
scan_atomret1
scan_expression' + 1' Before while igncomma:0
check_operator'+ 1' igncomma:0
check_operatorret1:is comma: 0
check_operator'+ 1' igncomma:0
check_operatorret1:is comma: 0
scan_operatorscan_operator: ' + 1'
check_literalcheck_literal:lit=' ,' idx=8 '+ 1'
check_literaldropping space
check_literalcheck_literal:After drop space:',' idx=8 '+ 1'
check_literal  ',' != '+'
check_literalcheck_literal: ret0
scan_operatorscan_operator: ret1 ' 1' nb:0
check_operator'1' igncomma:0
check_operatorret0:is comma: 0
scan_expression'1' Before scan_eitem igncomma:0
scan_eitemscan_eitem:
check_function '1'
check_functionret0
check_atomcheck_atom:
check_atomcheck_atom:Checking for character constant
check_literalcheck_literal:lit=' %' idx=9 ' 1'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=10 '1'
check_literal  '%' != '1'
check_literalcheck_literal: ret0
check_atomcheck_atom:Checking for string
check_literalcheck_literal:lit=' "' idx=9 ' 1'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=10 '1'
check_literal  '"' != '1'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
check_floatFltval:'1' float:1.000000e+00
check_floatcheck_float: ret0
check_integercheck_integer: '1'
check_integerret1
check_numbercheck_number: ret1
check_atomret1
scan_atomscan_atom:
check_literalcheck_literal:lit=' %' idx=9 ' 1'
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=10 '1'
check_literal  '%' != '1'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' "' idx=9 ' 1'
check_literaldropping space
check_literalcheck_literal:After drop space:'"' idx=10 '1'
check_literal  '"' != '1'
check_literalcheck_literal: ret0
check_numbercheck_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
check_floatFltval:'1' float:1.000000e+00
check_floatcheck_float: ret0
check_integercheck_integer: '1'
check_integerret1
check_numbercheck_number: ret1
scan_numberscan_number:
check_floatcheck_float:
isfloatdigitisfloatdigit:
isfloatdigitisfloatdigit:
check_floatFltval:'1' float:1.000000e+00
check_floatcheck_float: ret0
check_integercheck_integer: '1'
check_integerret1
scan_integer'1'
scan_integerret1
scan_integerret1  num_dig:1 intval='1'
scan_atomret1
scan_expressionn commas now:0
check_literalcheck_literal:lit=' %' idx=11 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'%' idx=11 ''
check_literalcheck_literal  ret0 Empty test string
check_operator'' igncomma:0
check_operatorret0:is comma: 0
scan_expressionret1 '' commas:0
add_var_infoName:R% Idx:-1
add_var_infoAlready present
add_var_info  reference so OK
scan_assignmentscan_assignment: ret1
scan_lineret1
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=11 ''
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=11 ''
check_literalcheck_literal  ret0 Empty test string
drop_colonExit
scan_line:FFFFFD6A

scan_line:''cline:''
pull_next_line:FFFFFC94

pull_next_line:''
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=11 ''
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=11 ''
check_literalcheck_literal  ret0 Empty test string
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=11 strlen:0 
pull_next_lineReading line
pull_next_line------------------------------
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineGot a line: 'ELSE'
pull_next_lineret1
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 268501172
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 268501172
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 268501172
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 268501172
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 268501172
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' TRAP' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'TRAP' idx=0 'ELSE'
check_literal  'T' != 'E'
check_literalcheck_literal: ret0
scan_ifLine scanned ok
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
scan_line:FFFFFD6A

scan_line:'ELSE'cline:'ELSE'
pull_next_line:FFFFFC94

pull_next_line:'ELSE'
pull_next_lineProcessing expression just parsed
drop_colonEntry
check_literalcheck_literal:lit=' :' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:':' idx=0 'ELSE'
check_literal  ':' != 'E'
check_literalcheck_literal: ret0
drop_colonExit
pull_next_lineChecking for existing data in cline. cline_i=0 strlen:4 
pull_next_lineData still in line buffer, check not all space
is_all_spacescline[0] = 'E' (69)
is_all_spacescline[1] = 'L' (76)
is_all_spacescline[2] = 'S' (83)
is_all_spacescline[3] = 'E' (69)
is_all_spacesIs not all spaces
pull_next_lineret1  Not all spaces
check_literalcheck_literal:lit='REM' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit='REM&' idx=0 'ELSE'
check_literalcheck_literal:After drop space:'REM&' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' REM& ' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'REM& ' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_remret0 proc cll
check_assignmentcheck_assignment:
check_variable'ELSE'
check_operator'ELSE' igncomma:1
check_operatorret0:is comma: 0
check_vnamecheck_vname 'ELSE':
check_vnamecheck_vname ret1 '':
check_variableName: ''
check_variablecheck_variable: Ary test ''
check_literalcheck_literal:lit='(' idx=4 ''
check_literalcheck_literal:After drop space:'(' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_variablecheck_variable:ret1 vname='' is str:0 int:0 flt:1 ary:0
check_variablecheck_variable:ret1 
check_literalcheck_literal:lit=' =' idx=4 ''
check_literaldropping space
check_literalcheck_literal:After drop space:'=' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_assignmentcheck_assignment:ret0
check_declare'ELSE'
check_literalcheck_literal:lit=' LOCAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LOCAL' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_literalcheck_literal:lit=' GLOBAL' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GLOBAL' idx=0 'ELSE'
check_literal  'G' != 'E'
check_literalcheck_literal: ret0
check_declareret 0
check_label
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_literalcheck_literal:lit='::' idx=4 ''
check_literalcheck_literal:After drop space:'::' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_labelcheck_label:ret0
check_proc_callcheck_proc_call:
check_textlabel'ELSE'
check_textlabel'ELSE' is a text label chstr:'E'
check_textlabelExit char:
check_textlabelcheck_textlabel:ret1 Name:'ELSE' Type:f
check_proc_call'ELSE' is text label
check_literalcheck_literal:lit=':' idx=4 ''
check_literalcheck_literal:After drop space:':' idx=4 ''
check_literalcheck_literal  ret0 Empty test string
check_proc_callcheck_proc_call:ret0
check_input'ELSE'
check_literalcheck_literal:lit=' INPUT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'INPUT' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_inputcheck_input:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' PRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'PRINT' idx=0 'ELSE'
check_literal  'P' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_printcheck_print: 'ELSE'
check_literalcheck_literal:lit=' LPRINT' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'LPRINT' idx=0 'ELSE'
check_literal  'L' != 'E'
check_literalcheck_literal: ret0
check_printcheck_print:ret0
check_returncheck_return: 'ELSE'
check_literalcheck_literal:lit=' RETURN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'RETURN' idx=0 'ELSE'
check_literal  'R' != 'E'
check_literalcheck_literal: ret0
check_returncheck_return:ret0
check_use'ELSE'
check_literalcheck_literal:lit=' USE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'USE' idx=0 'ELSE'
check_literal  'U' != 'E'
check_literalcheck_literal: ret0
check_useret0
check_onerrcheck_onerr: 'ELSE'
check_literalcheck_literal:lit=' ONERR' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'ONERR' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_onerrcheck_onerr:ret0
check_if'ELSE'
check_literalcheck_literal:lit=' IF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'IF' idx=0 'ELSE'
check_literal  'I' != 'E'
check_literalcheck_literal: ret0
check_ifret0
check_do'ELSE'
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_doret0
check_literalcheck_literal:lit=' OFF' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OFF' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_commandcheck_command:
check_commandcheck_command: ret0
check_function 'ELSE'
check_functionret0
check_literalcheck_literal:lit=' DO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'DO' idx=0 'ELSE'
check_literal  'D' != 'E'
check_literalcheck_literal: ret0
check_createopenCreate:1 Open:0
check_literalcheck_literal:lit=' CREATE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'CREATE' idx=0 'ELSE'
check_literal  'C' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_createopenCreate:0 Open:1
check_literalcheck_literal:lit=' OPEN' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'OPEN' idx=0 'ELSE'
check_literal  'O' != 'E'
check_literalcheck_literal: ret0
check_createopenret0
check_while'ELSE'
check_literalcheck_literal:lit=' WHILE' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'WHILE' idx=0 'ELSE'
check_literal  'W' != 'E'
check_literalcheck_literal: ret0
check_whileret0
check_literalcheck_literal:lit=' GOTO' idx=0 'ELSE'
check_literaldropping space
check_literalcheck_literal:After drop space:'GOTO' idx=0 'ELSE'l